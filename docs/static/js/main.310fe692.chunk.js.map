{"version":3,"sources":["Demo/Demo.scss","Home/Home.scss","Home/Home.js","../../babel-transform-damu-plugin/src/boilerplates.js","../../babel-transform-damu-plugin/src/flags.js","../../babel-transform-damu-plugin/src/index.js","Demo/Demo.js","App.js","serviceWorker.js","index.js","Demo/demos/index.js"],"names":["module","exports","App","navbar","brand","preview","previewDashboard","preview-html","preview-both","preview-code","title","subtitle","button","Home","react_default","a","createElement","className","styles","Link","to","code","APPEND_CHILDREN","Object","_babel_core_lib","program","body","flags","Symbol","babel_transform_damu_plugin_src","helper_plugin_utils_lib","api","options","assertVersion","name","inherits","plugin_syntax_jsx_lib_default","visitor","JSXElement","path","_transformJSXElement","transformJSXElement","identifier","statements","replaceWith","forEach","statement","unshiftIntoBlock","JSXFragment","list","_path$get$filter$map$","get","filter","isEmptyJSXText","map","elem","transformElement","reduce","result","_ref","_result$statements","identifiers","push","apply","toConsumableArray","types_lib","CallExpression","enter","includes","node","normalizeBlockStatement","exit","callee","type","object","property","args","arguments","target","appendChild","ImportDeclaration","source","value","remove","Program","scope","bindings","React","ReactDOM","binding","pushContainer","parent","generateUidIdentifier","documentCreateTextNode","transformJSXText","console","log","expression","transformBinaryExpression","length","mapperBody","returnStatement","find","b","argument","_statements","declareConst","transformMapCallExpresion","transformCallExpression","operator","consequent","ifBlock","left","transformLogicalAndExpression","alternate","transformLogicalOrExpression","Error","transformLogicalExpression","test","transformConditionalExpression","transformJSXExpression","transformIdentifier","getIdentifierName","openingElement","declaration","elemName","documentCreateElement","attributes","attr","key","_value","setAttribute","_ref2","children","child","findParent","isProgram","findProgram","trim","condition","thenCase","elseCase","thenCaseArray","Array","isArray","elseCaseArray","blockPath","blockList","parentPath","insertBefore","unshiftContainer","demoList","keys","demos","EDITOR_PROPS","$blockScrolling","ACE_PREVIEW_OPTIONS","useWorker","getSelectedFromHash","hash","decodeURIComponent","slice","Demo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","error","transpile","onChangeTemplate","event","history","replace","location","pathname","currentTarget","onChangeDemo","selectedDemo","onPreviewModeChange","previewMode","babel","plugins","damuPlugin","then","transpiled","split","line","join","iframe","firstChild","removeChild","document","previewIframe","contentDocument","contentWindow","open","write","concat","codeToHtml","close","catch","message","onIframeRef","ref","state","prevProps","Fragment","demo","rel","href","lib_default","height","width","mode","theme","fontSize","showGutter","editorProps","tabSize","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","id","checked","readOnly","setOptions","Component","withRouter","BrowserRouter","basename","HashRouter","Route","exact","component","Boolean","window","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","01 simple","02 fragment","03 list","04 map"],"mappings":"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","file":"static/js/main.310fe692.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3HGgo8YmsRzzR-43XGuiVo\",\"navbar\":\"gBnLqs9WpuhQyk5qcuBFE\",\"brand\":\"_1ANlngfxtlZL_wfXyTiiOt\",\"preview\":\"_1g_0nYQynQCg9NHI5earA\",\"previewDashboard\":\"_2dc8blJjyeHHcxcYajKPbp\",\"preview-html\":\"_2I0726fxMFLvUluQZyK_h2\",\"preview-both\":\"_1XiMwV8qMU22Ph0eS3Pi0D\",\"preview-code\":\"_8wfWpLf3i2rFaC1LnaJXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_2MqrEPH7wRGTUnAVXplCQU\",\"title\":\"_24SQRvaGQXqT_X5Wyx2Ndf\",\"subtitle\":\"m60etY5PtB6SdZqnydOx6\",\"button\":\"_36HiqEt255U7c_x1fj-oiL\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Home.scss';\n\nexport default function Home() {\n  return (\n    <div className={styles.App}>\n      <div>\n        <h1 className={styles.title}>Damu</h1>\n        <h2 className={styles.subtitle}>A React Compiler</h2>\n        <Link to=\"/repl\">\n          <button className={styles.button}>REPL</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import { parseSync } from '@babel/core';\nexport var APPEND_CHILDREN = parse(\"\\nfunction __damu__appendChildren(parent, children) {\\n  children = Array.isArray(children) ? children : [children];\\n  children.forEach(function(child) {\\n    parent.appendChild(child);\\n  });\\n}\\n\");\n\nfunction parse(code) {\n  return parseSync(code).program.body[0];\n}","export default {\n  APPEND_CHILDREN: Symbol('__has_appendChildren__')\n};","import _toConsumableArray from \"/Users/tanlh/Project/damu/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport jsx from '@babel/plugin-syntax-jsx';\nimport { declare } from '@babel/helper-plugin-utils';\nimport * as t from '@babel/types';\nimport { APPEND_CHILDREN } from './boilerplates';\nimport Flags from './flags';\nexport default declare(function (api, options) {\n  api.assertVersion(7);\n  return {\n    name: 'babel-transform-damu-plugin',\n    inherits: jsx,\n    visitor: {\n      JSXElement: function JSXElement(path) {\n        var _transformJSXElement = transformJSXElement(path),\n            identifier = _transformJSXElement.identifier,\n            statements = _transformJSXElement.statements;\n\n        path.replaceWith(identifier);\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      JSXFragment: function JSXFragment(path) {\n        var _path$get$filter$map$ = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n          return transformElement(elem);\n        }).reduce(function (result, _ref) {\n          var _result$statements;\n\n          var identifier = _ref.identifier,\n              statements = _ref.statements;\n          result.identifiers.push(identifier);\n\n          (_result$statements = result.statements).push.apply(_result$statements, _toConsumableArray(statements));\n\n          return result;\n        }, {\n          identifiers: [],\n          statements: []\n        }),\n            identifiers = _path$get$filter$map$.identifiers,\n            statements = _path$get$filter$map$.statements;\n\n        path.replaceWith(toArray(identifiers));\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      CallExpression: {\n        enter: function enter(path) {\n          if (['ArrowFunctionExpression', 'FunctionExpression'].includes(path.get('arguments.0.type').node)) {\n            normalizeBlockStatement(path.get('arguments.0.body'));\n          }\n        },\n        exit: function exit(path) {\n          if (isDamuRender(path.node)) {\n            var args = path.node.arguments;\n            var elem = args[0];\n            var target = args[1];\n            path.replaceWith(appendChild(target, elem, path));\n          }\n        }\n      },\n      ImportDeclaration: function ImportDeclaration(path) {\n        if (['react', 'react-dom'].includes(path.node.source.value)) {\n          path.remove();\n        }\n      },\n      Program: {\n        exit: function exit(path) {\n          var reactBindings = [path.scope.bindings.React, path.scope.bindings.ReactDOM];\n          reactBindings.forEach(function (binding) {\n            if (binding) {\n              binding.path.remove();\n            }\n          });\n\n          if (path[Flags.APPEND_CHILDREN]) {\n            path.pushContainer('body', APPEND_CHILDREN);\n          }\n        }\n      }\n    }\n  };\n});\n\nfunction transformElement(path, parent) {\n  switch (path.node.type) {\n    case 'JSXElement':\n      return transformJSXElement(path, parent);\n\n    case 'JSXText':\n    case 'StringLiteral':\n      return transformJSXText(path, parent);\n\n    case 'JSXExpressionContainer':\n      return transformJSXExpression(path, parent);\n\n    case 'Identifier':\n    case 'MemberExpression':\n      return transformIdentifier(path, parent);\n\n    default:\n      throw new Error('Unknown element type: ' + path.node.type);\n  }\n}\n\nfunction transformJSXElement(path, parent) {\n  var name = getIdentifierName(path.node.openingElement.name);\n  var identifier = path.scope.generateUidIdentifier(name);\n  var result = [];\n  var declaration = documentCreateElement(identifier, name);\n  result.push(declaration);\n  var attributes = path.node.openingElement.attributes.map(function (attr) {\n    return setAttribute(identifier, attr.name.name, attr.value);\n  });\n  attributes.forEach(function (attr) {\n    return result.push(attr);\n  });\n  var childrens = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n    return transformElement(elem, identifier);\n  }).map(function (_ref2) {\n    var statements = _ref2.statements;\n    return statements;\n  });\n  childrens.forEach(function (children) {\n    return result.push.apply(result, _toConsumableArray(children));\n  });\n\n  if (parent) {\n    result.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: result\n  };\n}\n\nfunction transformJSXText(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('text');\n  var statements = [documentCreateTextNode(identifier, t.stringLiteral(path.node.value))];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformJSXExpression(path, parent) {\n  console.log(path);\n\n  switch (path.node.expression.type) {\n    case 'BinaryExpression':\n      return transformBinaryExpression(path.get('expression'), parent);\n\n    case 'CallExpression':\n      return transformCallExpression(path.get('expression'), parent);\n\n    case 'LogicalExpression':\n      return transformLogicalExpression(path.get('expression'), parent);\n\n    case 'ConditionalExpression':\n      return transformConditionalExpression(path.get('expression'), parent);\n\n    default:\n      return transformElement(path.get('expression'), parent);\n  }\n\n  throw new Error('Unknown expression type: ' + path.node.expression.type);\n}\n\nfunction transformBinaryExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [documentCreateTextNode(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformCallExpression(path, parent) {\n  if (isMapCallExpression(path.node)) {\n    return transformMapCallExpresion(path, parent);\n  } // normal call expression\n\n\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [declareConst(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformMapCallExpresion(path, parent) {\n  normalizeBlockStatement(path.get('arguments.0.body'));\n\n  if (parent) {\n    // arr.forEach(i => parent.appendChild(i))\n    path.get('callee.property').replaceWith(t.identifier('forEach'));\n    var mapperBody = path.get('arguments.0.body.body');\n    var returnStatement = mapperBody.find(function (b) {\n      return b.node.type === 'ReturnStatement';\n    });\n\n    if (returnStatement) {\n      returnStatement.replaceWith(appendChild(parent, returnStatement.node.argument, path));\n    }\n\n    var statements = [t.expressionStatement(path.node)];\n    return {\n      identifier: null,\n      statements: statements\n    };\n  } else {\n    // identifier = arr.map(i => i)\n    var identifier = path.scope.generateUidIdentifier('lists'); // console.log(path.node);\n\n    var _statements = [declareConst(identifier, path.node)];\n    return {\n      identifier: identifier,\n      statements: _statements\n    };\n  }\n}\n\nfunction normalizeBlockStatement(path) {\n  if (path.node.type !== 'BlockStatement') {\n    path.replaceWith(t.blockStatement([t.returnStatement(path.node)]));\n  }\n\n  return path;\n}\n\nfunction transformLogicalExpression(path, parent) {\n  switch (path.node.operator) {\n    case '&&':\n      return transformLogicalAndExpression(path, parent);\n\n    case '||':\n      return transformLogicalOrExpression(path, parent);\n  }\n\n  throw new Error('Unknown logical operator: ' + path.node.operator);\n}\n\nfunction transformLogicalAndExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformLogicalOrExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('left'), parent);\n  var alternate = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformConditionalExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('consequent'), parent);\n  var alternate = transformElement(path.get('alternate'), parent);\n  var statements = [ifBlock(path.node.test, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformIdentifier(path, parent) {\n  var identifier = path.node;\n  var statements = parent ? [appendChild(parent, identifier, path)] : [];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction getIdentifierName(node) {\n  switch (node.type) {\n    case 'JSXMemberExpression':\n      return getIdentifierName(node.object) + '.' + getIdentifierName(node.property);\n\n    case 'JSXIdentifier':\n      return node.name;\n\n    default:\n      throw new Error('Unknown type: ' + node.type);\n  }\n}\n\nfunction documentCreateElement(identifier, elemName) {\n  // handle functional component?\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createElement')), [t.stringLiteral(elemName)]));\n}\n\nfunction documentCreateTextNode(identifier, node) {\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createTextNode')), [node]));\n}\n\nfunction declareConst(identifier, value) {\n  return t.variableDeclaration('const', [t.variableDeclarator(identifier, value)]);\n}\n\nfunction appendChild(parent, child, path) {\n  findProgram(path)[Flags.APPEND_CHILDREN] = true;\n  return t.expressionStatement(t.callExpression(t.identifier('__damu__appendChildren'), [parent, child]));\n}\n\nfunction setAttribute(identifier, key, value) {\n  var _value = value.type === 'JSXExpressionContainer' ? value.expression : value;\n\n  return t.expressionStatement(t.callExpression(t.memberExpression(identifier, t.identifier('setAttribute')), [t.stringLiteral(key), _value]));\n}\n\nfunction isEmptyJSXText(path) {\n  return !(path.node.type === 'JSXText' && path.node.value.trim() === '');\n}\n\nfunction isEmptyJSXTextNode(node) {\n  return !(node.type === 'JSXText' && node.value.trim() === '');\n}\n\nfunction toArray(list) {\n  return t.arrayExpression(list);\n}\n\nfunction ifBlock(condition, thenCase, elseCase) {\n  var thenCaseArray = thenCase ? Array.isArray(thenCase) ? thenCase : [thenCase] : [];\n  var elseCaseArray = elseCase ? Array.isArray(elseCase) ? elseCase : [elseCase] : [];\n  return t.ifStatement(condition, t.blockStatement(thenCaseArray), elseCase ? t.blockStatement(elseCaseArray) : null);\n}\n\nfunction isDamuRender(node) {\n  return node.callee && node.callee.type === 'MemberExpression' && node.callee.object && node.callee.object.type === 'Identifier' && node.callee.object.name === 'ReactDOM' && node.callee.property.type === 'Identifier' && node.callee.property.name === 'render';\n}\n\nfunction unshiftIntoBlock(path, statement) {\n  var blockPath = path.scope.path;\n\n  switch (blockPath.node.type) {\n    case 'ArrowFunctionExpression':\n    case 'FunctionExpression':\n    case 'FunctionDeclaration':\n      blockPath = blockPath.get('body');\n      break;\n  }\n\n  var blockList = blockPath.get('body');\n  var findParent = path;\n\n  while (findParent) {\n    if (blockList.includes(findParent)) {\n      break;\n    }\n\n    findParent = findParent.parentPath;\n  }\n\n  if (findParent) {\n    findParent.insertBefore(statement);\n  } else {\n    // give up\n    blockPath.unshiftContainer('body', statement);\n  }\n}\n\nfunction isMapCallExpression(node) {\n  return node.callee && node.callee.type === 'MemberExpression' && node.callee.property && node.callee.property.type === 'Identifier' && node.callee.property.name === 'map' && node.arguments && node.arguments.length === 1 && ['FunctionExpression', 'ArrowFunctionExpression'].includes(node.arguments[0].type);\n}\n\nfunction findProgram(path) {\n  return path.findParent(function (parent) {\n    return parent.isProgram();\n  });\n}","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport AceEditor from 'react-ace';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\n\nimport * as babel from '@babel/core';\nimport damuPlugin from '@damu/babel-transform-damu-plugin';\nimport demos from './demos';\n\nimport styles from './Demo.scss';\n\nconst demoList = Object.keys(demos);\nconst EDITOR_PROPS = { $blockScrolling: true };\nconst ACE_PREVIEW_OPTIONS = { useWorker: false };\n\nfunction getSelectedFromHash(hash) {\n  hash = decodeURIComponent(hash.slice(1));\n  if (demoList.includes(hash)) {\n    return hash;\n  }\n  return '01 simple';\n}\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    const selectedDemo = getSelectedFromHash(props.location.hash);\n    this.state = {\n      value: demos[selectedDemo],\n      selectedDemo,\n      transpiled: '',\n      error: null,\n      previewMode: 'both',\n    };\n  }\n  onChange = value => {\n    this.setState({ value, error: null });\n    this.transpile(value);\n  };\n\n  onChangeTemplate = event => {\n    this.props.history.replace(\n      this.props.location.pathname + '#' + event.currentTarget.value\n    );\n  };\n\n  onChangeDemo = selectedDemo => {\n    const value = demos[selectedDemo];\n    this.setState({\n      selectedDemo,\n      value,\n      error: null,\n    });\n    this.transpile(value);\n  };\n\n  onPreviewModeChange = event => {\n    this.setState({\n      previewMode: event.currentTarget.value,\n    });\n  };\n\n  componentDidMount() {\n    this.transpile(this.state.value);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.hash !== this.props.location.hash) {\n      this.onChangeDemo(getSelectedFromHash(this.props.location.hash));\n    }\n  }\n\n  transpile = code => {\n    babel\n      .transformAsync(code, {\n        plugins: [damuPlugin],\n      })\n      .then(result => {\n        this.setState({ transpiled: simplePrettier(result.code) });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n          //\n          const iframe = document.createElement('iframe');\n          this.iframe.appendChild(iframe);\n\n          var previewIframe =\n            iframe.contentDocument || iframe.contentWindow.document;\n          previewIframe.open();\n          previewIframe.write(codeToHtml(result.code));\n          previewIframe.close();\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({ transpiled: '', error: error.message });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n        }\n      });\n  };\n\n  onIframeRef = ref => {\n    this.iframe = ref;\n  };\n\n  render() {\n    const { previewMode } = this.state;\n    return (\n      <>\n        <div className={styles.navbar}>\n          <Link to=\"/\" className={styles.brand}>\n            Damu\n          </Link>\n          <label>\n            {'Demo: '}\n            <select\n              onChange={this.onChangeTemplate}\n              value={this.state.selectedDemo}\n            >\n              {demoList.map(demo => (\n                <option key={demo} value={demo}>\n                  {demo}\n                </option>\n              ))}\n            </select>\n          </label>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            href=\"https://github.com/tanhauhau/damu\"\n          >\n            View it on Github\n          </a>\n        </div>\n        <div className={styles.App}>\n          <AceEditor\n            height=\"calc(100vh - 50px)\"\n            width=\"50vw\"\n            mode=\"jsx\"\n            theme=\"tomorrow\"\n            fontSize={14}\n            onChange={this.onChange}\n            showGutter={true}\n            name=\"editor\"\n            value={this.state.value}\n            editorProps={EDITOR_PROPS}\n            tabSize={2}\n            enableBasicAutocompletion={true}\n            enableLiveAutocompletion={true}\n            showLineNumbers={true}\n          />\n          <div\n            className={styles.preview + ' ' + styles['preview-' + previewMode]}\n          >\n            <div className={styles.previewDashboard}>\n              <div>\n                <label>\n                  <input\n                    id=\"both\"\n                    value=\"both\"\n                    name=\"preview-mode\"\n                    type=\"radio\"\n                    checked={previewMode === 'both'}\n                    onChange={this.onPreviewModeChange}\n                  />\n                  Both\n                </label>\n                <label>\n                  <input\n                    id=\"code\"\n                    value=\"code\"\n                    name=\"preview-mode\"\n                    type=\"radio\"\n                    checked={previewMode === 'code'}\n                    onChange={this.onPreviewModeChange}\n                  />\n                  Code\n                </label>\n                <label>\n                  <input\n                    id=\"html\"\n                    value=\"html\"\n                    name=\"preview-mode\"\n                    type=\"radio\"\n                    checked={previewMode === 'html'}\n                    onChange={this.onPreviewModeChange}\n                  />\n                  HTML\n                </label>\n              </div>\n            </div>\n            <AceEditor\n              height={`calc(${previewMode === 'code' ? 100 : 50}vh - 80px)`}\n              width=\"50vw\"\n              mode=\"javascript\"\n              theme=\"tomorrow\"\n              readOnly={true}\n              fontSize={14}\n              showGutter={true}\n              name=\"preview\"\n              value={this.state.error || this.state.transpiled}\n              editorProps={EDITOR_PROPS}\n              tabSize={2}\n              showLineNumbers={true}\n              setOptions={ACE_PREVIEW_OPTIONS}\n            />\n            <div ref={this.onIframeRef} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction simplePrettier(code) {\n  return code\n    .split('\\n')\n    .filter(line => line.trim() !== '')\n    .map(line =>\n      /^[\\s\\t]*(const|document|if|function)/.test(line) ? '\\n' + line : line\n    )\n    .join('\\n')\n    .trim();\n}\n\nfunction codeToHtml(code) {\n  return `<html>\n    <body>\n      <div id=\"app\" />\n    </body>\n    <script type=\"text/javascript\">${code}</script>\n  </html>`;\n}\n\nexport default withRouter(Demo);\n","import React, { Component } from 'react';\nimport { BrowserRouter, HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home/Home';\nimport Demo from './Demo/Demo';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/damu\">\n        <Router>\n          <>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/repl\" exact component={Demo} />\n          </>\n        </Router>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\"01 simple\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <h1 id=\\\"title\\\" height={54}>\\n    Hello world\\n  </h1>,\\n  document.querySelector('#app')\\n);\\n\",\"02 fragment\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <>\\n    <h2>The Damu-Madu Project</h2>\\n    <p>\\n      The Damu-Madu sister project aims to bring the developer experience of\\n      writing JSX (XML in JavaScript) without having to use React.\\n    </p>\\n    <p>\\n      JSX is independent of React, you don't have to use React just to use JSX\\n      in your development process.\\n    </p>\\n    <p>\\n      The Damu-Madu sister project contains solution for both client render and\\n      server render:\\n    </p>\\n    <ul>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/madu\\\">madu</a> - Writing jsx as if\\n        html string\\n      </li>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/damu\\\">damu</a> - Converts jsx to\\n        vanilla javascript\\n      </li>\\n    </ul>\\n  </>,\\n  document.querySelector('#app')\\n);\\n\",\"03 list\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <div className=\\\"body\\\">\\n    <h1 className=\\\"header\\\">You shall not pass</h1>\\n    <ul>\\n      <li id=\\\"frodo\\\">Frodo Baggins</li>\\n      <li id=\\\"samwise\\\">Samwise Gamgee</li>\\n      <li id=\\\"gandalf\\\">Gandalf the Grey</li>\\n      <li id=\\\"legolas\\\">Legolas</li>\\n      <li id=\\\"gimli\\\">Gimli</li>\\n      <li id=\\\"aragorn\\\">Aragorn</li>\\n      <li id=\\\"boromir\\\">Boromir</li>\\n      <li id=\\\"meriadoc\\\">Meriadoc</li>\\n      <li id=\\\"peregrin\\\">Peregrin</li>\\n    </ul>\\n  </div>,\\n  document.querySelector('#app')\\n);\\n\",\"04 map\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nconst buyers = [\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [{ firstName: 'James', lastName: 'Steven' }],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n];\\n\\nReactDOM.render(\\n  <ul>\\n    {buyers.map(buyer => (\\n      <li>\\n        {buyer.firstName + ' - ' + buyer.lastName}\\n        {buyer.followers.map((follower, index) => (\\n          <>\\n            <li>\\n              {index + '. ' + follower.firstName + ' - ' + follower.lastName}\\n            </li>\\n            <li className=\\\"hidden\\\">{index % 2 == 0 ? 'odd' : 'even'}</li>\\n          </>\\n        ))}\\n      </li>\\n    ))}\\n  </ul>,\\n  document.querySelector('#app')\\n);\\n\"}"],"sourceRoot":""}