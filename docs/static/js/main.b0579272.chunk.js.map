{"version":3,"sources":["Demo/Demo.scss","Home/Home.scss","Home/Home.js","../../babel-transform-damu-plugin/src/boilerplates.js","../../babel-transform-damu-plugin/src/flags.js","../../babel-transform-damu-plugin/src/utils/event-listeners.js","../../babel-transform-damu-plugin/src/utils/attributes.js","../../babel-transform-damu-plugin/src/index.js","Demo/Demo.js","App.js","serviceWorker.js","index.js","Demo/demos/index.js"],"names":["module","exports","App","navbar","brand","preview","previewDashboard","preview-html","preview-both","preview-code","title","subtitle","button","Home","react_default","a","createElement","className","styles","Link","to","code","APPEND_CHILDREN","Object","_babel_core_lib","program","body","flags","Symbol","DOM_EVENTS","handler","Map","_setAttribute","identifier","key","value","types_lib","set","element","stringOrObject","type","styleObject","properties","map","_ref","node","appendPx","_styleObject","styleString","_styleString","useCapture","eventName","slice","toLowerCase","includes","replace","filter","Boolean","babel_transform_damu_plugin_src","helper_plugin_utils_lib","api","options","assertVersion","name","inherits","plugin_syntax_jsx_lib_default","visitor","JSXElement","path","_transformJSXElement","transformJSXElement","statements","replaceWith","forEach","statement","unshiftIntoBlock","JSXFragment","list","_path$get$filter$map$","get","isEmptyJSXText","elem","transformElement","reduce","result","_result$statements","identifiers","push","apply","toConsumableArray","CallExpression","enter","normalizeBlockStatement","exit","callee","object","property","args","arguments","target","appendChild","ImportDeclaration","source","remove","Program","scope","bindings","React","ReactDOM","binding","pushContainer","parent","generateUidIdentifier","documentCreateTextNode","transformJSXText","expression","transformBinaryExpression","length","mapperBody","returnStatement","find","b","argument","_statements","declareConst","transformMapCallExpresion","transformCallExpression","operator","consequent","ifBlock","left","transformLogicalAndExpression","alternate","transformLogicalOrExpression","Error","transformLogicalExpression","test","transformConditionalExpression","transformJSXExpression","transformIdentifier","getIdentifierName","openingElement","declaration","elemName","documentCreateElement","attributes","attr","_value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","iterator","next","done","matchKey","err","return","setAttribute","_ref2","children","child","findParent","isProgram","findProgram","trim","condition","thenCase","elseCase","thenCaseArray","Array","isArray","elseCaseArray","blockPath","blockList","parentPath","insertBefore","unshiftContainer","demoList","demos","EDITOR_PROPS","$blockScrolling","ACE_PREVIEW_OPTIONS","useWorker","getSelectedFromHash","hash","decodeURIComponent","Demo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","error","transpile","onChangeTemplate","event","history","location","pathname","currentTarget","onChangeDemo","selectedDemo","onPreviewModeChange","previewMode","babel","plugins","damuPlugin","then","transpiled","split","line","join","iframe","firstChild","removeChild","document","previewIframe","contentDocument","contentWindow","open","write","concat","codeToHtml","close","catch","console","message","onIframeRef","ref","state","prevProps","_this2","react_responsive_default","minWidth","match","Fragment","demo","rel","href","lib_default","height","width","mode","theme","fontSize","showGutter","editorProps","tabSize","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","id","checked","readOnly","setOptions","Component","withRouter","BrowserRouter","basename","HashRouter","Route","exact","component","window","hostname","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","01 simple","02 fragment","03 list","04 map","05 events"],"mappings":"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","file":"static/js/main.b0579272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3HGgo8YmsRzzR-43XGuiVo\",\"navbar\":\"gBnLqs9WpuhQyk5qcuBFE\",\"brand\":\"_1ANlngfxtlZL_wfXyTiiOt\",\"preview\":\"_1g_0nYQynQCg9NHI5earA\",\"previewDashboard\":\"_2dc8blJjyeHHcxcYajKPbp\",\"preview-html\":\"_2I0726fxMFLvUluQZyK_h2\",\"preview-both\":\"_1XiMwV8qMU22Ph0eS3Pi0D\",\"preview-code\":\"_8wfWpLf3i2rFaC1LnaJXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_2MqrEPH7wRGTUnAVXplCQU\",\"title\":\"_24SQRvaGQXqT_X5Wyx2Ndf\",\"subtitle\":\"m60etY5PtB6SdZqnydOx6\",\"button\":\"_36HiqEt255U7c_x1fj-oiL\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Home.scss';\n\nexport default function Home() {\n  return (\n    <div className={styles.App}>\n      <div>\n        <h1 className={styles.title}>Damu</h1>\n        <h2 className={styles.subtitle}>A React Compiler</h2>\n        <Link to=\"/repl\">\n          <button className={styles.button}>REPL</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import { parseSync } from '@babel/core';\nexport var APPEND_CHILDREN = parse(\"\\nfunction __damu__appendChildren(parent, children) {\\n  children = Array.isArray(children) ? children : [children];\\n  children.forEach(function(child) {\\n    parent.appendChild(child);\\n  });\\n}\\n\");\n\nfunction parse(code) {\n  return parseSync(code).program.body[0];\n}","export default {\n  APPEND_CHILDREN: Symbol('__has_appendChildren__')\n};","export var DOM_EVENTS = ['abort', 'blur', 'canplay', 'canplaythrough', 'cancel', 'change', 'click', 'close', 'compositionend', 'compositionstart', 'compositionupdate', 'contextmenu', 'copy', 'cut', 'dblclick', 'auxclick', 'drag', 'dragend', 'dragenter', 'dragexit', 'dragleave', 'dragover', 'dragstart', 'drop', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'gotpointercapture', 'input', 'invalid', 'keydown', 'keypress', 'keyup', 'load', 'loadstart', 'loadeddata', 'loadedmetadata', 'lostpointercapture', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'paste', 'pause', 'play', 'playing', 'pointercancel', 'pointerdown', 'pointerenter', 'pointerleave', 'pointermove', 'pointerout', 'pointerover', 'pointerup', 'progress', 'ratechange', 'reset', 'scroll', 'seeked', 'seeking', 'selectionchange', 'stalled', 'submit', 'suspend', 'textInput', 'timeupdate', 'toggle', 'touchcancel', 'touchend', 'touchmove', 'touchstart', 'animationend', 'animationiteration', 'animationstart', 'transitionend', 'volumechange', 'waiting', 'wheel']; // TODO:\n\nvar DOM_VENDOR_EVENTS = ['animationend', 'animationiteration', 'animationstart', 'transitionend '];","import * as t from '@babel/types';\nimport { DOM_EVENTS } from './event-listeners';\nvar handler = new Map();\nhandler.set('className', _className);\nhandler.set('style', _style);\nhandler.set(/^on[A-Z]\\S+$/, _eventListener);\nexport function setAttribute(identifier, key, value, path) {\n  var _value = value.type === 'JSXExpressionContainer' ? value.expression : value;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = handler.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var matchKey = _step.value;\n\n      if (typeof matchKey === 'string' && key === matchKey) {\n        return handler.get(matchKey)(identifier, _value);\n      } else if (typeof matchKey.test === 'function' && matchKey.test(key)) {\n        return handler.get(matchKey)(identifier, key, _value);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return _setAttribute(identifier, key, _value);\n}\n\nfunction _setAttribute(identifier, key, value) {\n  return t.expressionStatement(t.callExpression(t.memberExpression(identifier, t.identifier('setAttribute')), [t.stringLiteral(key), value]));\n}\n\nfunction _className(element, className) {\n  // elem.className = className;\n  return t.expressionStatement(t.assignmentExpression('=', t.memberExpression(element, t.identifier('className')), className));\n}\n\nfunction _style(element, stringOrObject) {\n  switch (stringOrObject.type) {\n    case 'ObjectExpression':\n      return _styleObject(element, stringOrObject);\n\n    case 'StringLiteral':\n      return _styleString(element, stringOrObject);\n  }\n}\n\nfunction _styleString(element, styleString) {\n  return _setAttribute(element, 'style', styleString);\n}\n\nfunction _styleObject(element, styleObject) {\n  return styleObject.properties.map(function (_ref) {\n    var key = _ref.key,\n        value = _ref.value;\n    return t.expressionStatement(t.assignmentExpression('=', t.memberExpression(t.memberExpression(element, t.identifier('style')), key), appendPx(value)));\n  });\n}\n\nfunction appendPx(node) {\n  if (node.type === 'NumericLiteral') {\n    return t.stringLiteral(node.value + 'px');\n  }\n\n  return node;\n}\n\nfunction _eventListener(element, key, value) {\n  var useCapture = false;\n  var eventName = key.slice(2).toLowerCase();\n\n  if (!DOM_EVENTS.includes(eventName)) {\n    if (DOM_EVENTS.includes(eventName.replace('capture', ''))) {\n      eventName = eventName.replace('capture', '');\n      useCapture = true;\n    } else {\n      return _setAttribute(element, key, value);\n    }\n  }\n\n  return t.expressionStatement(t.callExpression(t.memberExpression(element, t.identifier('addEventListener')), [t.stringLiteral(eventName), value, useCapture && t.booleanLiteral(useCapture)].filter(Boolean)));\n}","import _toConsumableArray from \"/Users/lhtan/Projects/damu/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport jsx from '@babel/plugin-syntax-jsx';\nimport { declare } from '@babel/helper-plugin-utils';\nimport * as t from '@babel/types';\nimport { APPEND_CHILDREN } from './boilerplates';\nimport Flags from './flags';\nimport { setAttribute } from './utils/attributes';\nexport default declare(function (api, options) {\n  api.assertVersion(7);\n  return {\n    name: 'babel-transform-damu-plugin',\n    inherits: jsx,\n    visitor: {\n      JSXElement: function JSXElement(path) {\n        var _transformJSXElement = transformJSXElement(path),\n            identifier = _transformJSXElement.identifier,\n            statements = _transformJSXElement.statements;\n\n        path.replaceWith(identifier);\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      JSXFragment: function JSXFragment(path) {\n        var _path$get$filter$map$ = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n          return transformElement(elem);\n        }).reduce(function (result, _ref) {\n          var _result$statements;\n\n          var identifier = _ref.identifier,\n              statements = _ref.statements;\n          result.identifiers.push(identifier);\n\n          (_result$statements = result.statements).push.apply(_result$statements, _toConsumableArray(statements));\n\n          return result;\n        }, {\n          identifiers: [],\n          statements: []\n        }),\n            identifiers = _path$get$filter$map$.identifiers,\n            statements = _path$get$filter$map$.statements;\n\n        path.replaceWith(toArray(identifiers));\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      CallExpression: {\n        enter: function enter(path) {\n          if (['ArrowFunctionExpression', 'FunctionExpression'].includes(path.get('arguments.0.type').node)) {\n            normalizeBlockStatement(path.get('arguments.0.body'));\n          }\n        },\n        exit: function exit(path) {\n          if (isDamuRender(path.node)) {\n            var args = path.node.arguments;\n            var elem = args[0];\n            var target = args[1];\n            path.replaceWith(appendChild(target, elem, path));\n          }\n        }\n      },\n      ImportDeclaration: function ImportDeclaration(path) {\n        if (['react', 'react-dom'].includes(path.node.source.value)) {\n          path.remove();\n        }\n      },\n      Program: {\n        exit: function exit(path) {\n          var reactBindings = [path.scope.bindings.React, path.scope.bindings.ReactDOM];\n          reactBindings.forEach(function (binding) {\n            if (binding) {\n              binding.path.remove();\n            }\n          });\n\n          if (path[Flags.APPEND_CHILDREN]) {\n            path.pushContainer('body', APPEND_CHILDREN);\n          }\n        }\n      }\n    }\n  };\n});\n\nfunction transformElement(path, parent) {\n  switch (path.node.type) {\n    case 'JSXElement':\n      return transformJSXElement(path, parent);\n\n    case 'JSXText':\n    case 'StringLiteral':\n      return transformJSXText(path, parent);\n\n    case 'JSXExpressionContainer':\n      return transformJSXExpression(path, parent);\n\n    case 'Identifier':\n    case 'MemberExpression':\n      return transformIdentifier(path, parent);\n\n    default:\n      throw new Error('Unknown element type: ' + path.node.type);\n  }\n}\n\nfunction transformJSXElement(path, parent) {\n  var name = getIdentifierName(path.node.openingElement.name);\n  var identifier = path.scope.generateUidIdentifier(name);\n  var result = [];\n  var declaration = documentCreateElement(identifier, name);\n  result.push(declaration);\n  var attributes = path.node.openingElement.attributes.map(function (attr) {\n    return setAttribute(identifier, attr.name.name, attr.value, path);\n  });\n  attributes.forEach(function (attr) {\n    return result.push(attr);\n  });\n  var childrens = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n    return transformElement(elem, identifier);\n  }).map(function (_ref2) {\n    var statements = _ref2.statements;\n    return statements;\n  });\n  childrens.forEach(function (children) {\n    return result.push.apply(result, _toConsumableArray(children));\n  });\n\n  if (parent) {\n    result.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: result\n  };\n}\n\nfunction transformJSXText(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('text');\n  var statements = [documentCreateTextNode(identifier, t.stringLiteral(path.node.value))];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformJSXExpression(path, parent) {\n  switch (path.node.expression.type) {\n    case 'BinaryExpression':\n      return transformBinaryExpression(path.get('expression'), parent);\n\n    case 'CallExpression':\n      return transformCallExpression(path.get('expression'), parent);\n\n    case 'LogicalExpression':\n      return transformLogicalExpression(path.get('expression'), parent);\n\n    case 'ConditionalExpression':\n      return transformConditionalExpression(path.get('expression'), parent);\n\n    default:\n      return transformElement(path.get('expression'), parent);\n  }\n\n  throw new Error('Unknown expression type: ' + path.node.expression.type);\n}\n\nfunction transformBinaryExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [documentCreateTextNode(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformCallExpression(path, parent) {\n  if (isMapCallExpression(path.node)) {\n    return transformMapCallExpresion(path, parent);\n  } // normal call expression\n\n\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [declareConst(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformMapCallExpresion(path, parent) {\n  normalizeBlockStatement(path.get('arguments.0.body'));\n\n  if (parent) {\n    // arr.forEach(i => parent.appendChild(i))\n    path.get('callee.property').replaceWith(t.identifier('forEach'));\n    var mapperBody = path.get('arguments.0.body.body');\n    var returnStatement = mapperBody.find(function (b) {\n      return b.node.type === 'ReturnStatement';\n    });\n\n    if (returnStatement) {\n      returnStatement.replaceWith(appendChild(parent, returnStatement.node.argument, path));\n    }\n\n    var statements = [t.expressionStatement(path.node)];\n    return {\n      identifier: null,\n      statements: statements\n    };\n  } else {\n    // identifier = arr.map(i => i)\n    var identifier = path.scope.generateUidIdentifier('lists'); // console.log(path.node);\n\n    var _statements = [declareConst(identifier, path.node)];\n    return {\n      identifier: identifier,\n      statements: _statements\n    };\n  }\n}\n\nfunction normalizeBlockStatement(path) {\n  if (path.node.type !== 'BlockStatement') {\n    path.replaceWith(t.blockStatement([t.returnStatement(path.node)]));\n  }\n\n  return path;\n}\n\nfunction transformLogicalExpression(path, parent) {\n  switch (path.node.operator) {\n    case '&&':\n      return transformLogicalAndExpression(path, parent);\n\n    case '||':\n      return transformLogicalOrExpression(path, parent);\n  }\n\n  throw new Error('Unknown logical operator: ' + path.node.operator);\n}\n\nfunction transformLogicalAndExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformLogicalOrExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('left'), parent);\n  var alternate = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformConditionalExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('consequent'), parent);\n  var alternate = transformElement(path.get('alternate'), parent);\n  var statements = [ifBlock(path.node.test, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformIdentifier(path, parent) {\n  var identifier = path.node;\n  var statements = parent ? [appendChild(parent, identifier, path)] : [];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction getIdentifierName(node) {\n  switch (node.type) {\n    case 'JSXMemberExpression':\n      return getIdentifierName(node.object) + '.' + getIdentifierName(node.property);\n\n    case 'JSXIdentifier':\n      return node.name;\n\n    default:\n      throw new Error('Unknown type: ' + node.type);\n  }\n}\n\nfunction documentCreateElement(identifier, elemName) {\n  // handle functional component?\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createElement')), [t.stringLiteral(elemName)]));\n}\n\nfunction documentCreateTextNode(identifier, node) {\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createTextNode')), [node]));\n}\n\nfunction declareConst(identifier, value) {\n  return t.variableDeclaration('const', [t.variableDeclarator(identifier, value)]);\n}\n\nfunction appendChild(parent, child, path) {\n  findProgram(path)[Flags.APPEND_CHILDREN] = true;\n  return t.expressionStatement(t.callExpression(t.identifier('__damu__appendChildren'), [parent, child]));\n}\n\nfunction isEmptyJSXText(path) {\n  return !(path.node.type === 'JSXText' && path.node.value.trim() === '');\n}\n\nfunction isEmptyJSXTextNode(node) {\n  return !(node.type === 'JSXText' && node.value.trim() === '');\n}\n\nfunction toArray(list) {\n  return t.arrayExpression(list);\n}\n\nfunction ifBlock(condition, thenCase, elseCase) {\n  var thenCaseArray = thenCase ? Array.isArray(thenCase) ? thenCase : [thenCase] : [];\n  var elseCaseArray = elseCase ? Array.isArray(elseCase) ? elseCase : [elseCase] : [];\n  return t.ifStatement(condition, t.blockStatement(thenCaseArray), elseCase ? t.blockStatement(elseCaseArray) : null);\n}\n\nfunction isDamuRender(node) {\n  return node.callee && node.callee.type === 'MemberExpression' && node.callee.object && node.callee.object.type === 'Identifier' && node.callee.object.name === 'ReactDOM' && node.callee.property.type === 'Identifier' && node.callee.property.name === 'render';\n}\n\nfunction unshiftIntoBlock(path, statement) {\n  var blockPath = path.scope.path;\n\n  switch (blockPath.node.type) {\n    case 'ArrowFunctionExpression':\n    case 'FunctionExpression':\n    case 'FunctionDeclaration':\n      blockPath = blockPath.get('body');\n      break;\n  }\n\n  var blockList = blockPath.get('body');\n  var findParent = path;\n\n  while (findParent) {\n    if (blockList.includes(findParent)) {\n      break;\n    }\n\n    findParent = findParent.parentPath;\n  }\n\n  if (findParent) {\n    findParent.insertBefore(statement);\n  } else {\n    // give up\n    blockPath.unshiftContainer('body', statement);\n  }\n}\n\nfunction isMapCallExpression(node) {\n  return node.callee && node.callee.type === 'MemberExpression' && node.callee.property && node.callee.property.type === 'Identifier' && node.callee.property.name === 'map' && node.arguments && node.arguments.length === 1 && ['FunctionExpression', 'ArrowFunctionExpression'].includes(node.arguments[0].type);\n}\n\nfunction findProgram(path) {\n  return path.findParent(function (parent) {\n    return parent.isProgram();\n  });\n}","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\n\nimport AceEditor from 'react-ace';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\n\nimport * as babel from '@babel/core';\nimport damuPlugin from '@damu/babel-transform-damu-plugin';\nimport demos from './demos';\n\nimport styles from './Demo.scss';\n\nconst demoList = Object.keys(demos);\nconst EDITOR_PROPS = { $blockScrolling: true };\nconst ACE_PREVIEW_OPTIONS = { useWorker: false };\n\nfunction getSelectedFromHash(hash) {\n  hash = decodeURIComponent(hash.slice(1));\n  if (demoList.includes(hash)) {\n    return hash;\n  }\n  return '01 simple';\n}\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    const selectedDemo = getSelectedFromHash(props.location.hash);\n    this.state = {\n      value: demos[selectedDemo],\n      selectedDemo,\n      transpiled: '',\n      error: null,\n      previewMode: 'both',\n    };\n  }\n  onChange = value => {\n    this.setState({ value, error: null });\n    this.transpile(value);\n  };\n\n  onChangeTemplate = event => {\n    this.props.history.replace(\n      this.props.location.pathname + '#' + event.currentTarget.value\n    );\n  };\n\n  onChangeDemo = selectedDemo => {\n    const value = demos[selectedDemo];\n    this.setState({\n      selectedDemo,\n      value,\n      error: null,\n    });\n    this.transpile(value);\n  };\n\n  onPreviewModeChange = event => {\n    this.setState({\n      previewMode: event.currentTarget.value,\n    });\n  };\n\n  componentDidMount() {\n    this.transpile(this.state.value);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.hash !== this.props.location.hash) {\n      this.onChangeDemo(getSelectedFromHash(this.props.location.hash));\n    }\n  }\n\n  transpile = code => {\n    babel\n      .transformAsync(code, {\n        plugins: [damuPlugin],\n      })\n      .then(result => {\n        this.setState({ transpiled: simplePrettier(result.code) });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n          //\n          const iframe = document.createElement('iframe');\n          this.iframe.appendChild(iframe);\n\n          var previewIframe =\n            iframe.contentDocument || iframe.contentWindow.document;\n          previewIframe.open();\n          previewIframe.write(codeToHtml(result.code));\n          previewIframe.close();\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({ transpiled: '', error: error.message });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n        }\n      });\n  };\n\n  onIframeRef = ref => {\n    this.iframe = ref;\n  };\n\n  render() {\n    const { previewMode } = this.state;\n    return (\n      <MediaQuery minWidth={600}>\n        {match => (\n          <>\n            <div className={styles.navbar}>\n              <Link to=\"/\" className={styles.brand}>\n                Damu\n              </Link>\n              <label>\n                {'Demo: '}\n                <select\n                  onChange={this.onChangeTemplate}\n                  value={this.state.selectedDemo}\n                >\n                  {demoList.map(demo => (\n                    <option key={demo} value={demo}>\n                      {demo}\n                    </option>\n                  ))}\n                </select>\n              </label>\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                href=\"https://github.com/tanhauhau/damu\"\n              >\n                View it on Github\n              </a>\n            </div>\n            <div className={styles.App}>\n              <AceEditor\n                height={match ? \"calc(100vh - 50px)\" : '80vh'}\n                width={match ? \"50vw\" : '100vw'}\n                mode=\"jsx\"\n                theme=\"tomorrow\"\n                fontSize={14}\n                onChange={this.onChange}\n                showGutter={true}\n                name=\"editor\"\n                value={this.state.value}\n                editorProps={EDITOR_PROPS}\n                tabSize={2}\n                enableBasicAutocompletion={true}\n                enableLiveAutocompletion={true}\n                showLineNumbers={true}\n              />\n              <div\n                className={\n                  styles.preview + ' ' + styles['preview-' + previewMode]\n                }\n              >\n                <div className={styles.previewDashboard}>\n                  <div>\n                    <label>\n                      <input\n                        id=\"both\"\n                        value=\"both\"\n                        name=\"preview-mode\"\n                        type=\"radio\"\n                        checked={previewMode === 'both'}\n                        onChange={this.onPreviewModeChange}\n                      />\n                      Both\n                    </label>\n                    <label>\n                      <input\n                        id=\"code\"\n                        value=\"code\"\n                        name=\"preview-mode\"\n                        type=\"radio\"\n                        checked={previewMode === 'code'}\n                        onChange={this.onPreviewModeChange}\n                      />\n                      Code\n                    </label>\n                    <label>\n                      <input\n                        id=\"html\"\n                        value=\"html\"\n                        name=\"preview-mode\"\n                        type=\"radio\"\n                        checked={previewMode === 'html'}\n                        onChange={this.onPreviewModeChange}\n                      />\n                      HTML\n                    </label>\n                  </div>\n                </div>\n                <AceEditor\n                  height={`calc(${previewMode === 'code' ? 100 : 50}vh - 80px)`}\n                  width={match ? \"50vw\" : '100vw'}\n                  mode=\"javascript\"\n                  theme=\"tomorrow\"\n                  readOnly={true}\n                  fontSize={14}\n                  showGutter={true}\n                  name=\"preview\"\n                  value={this.state.error || this.state.transpiled}\n                  editorProps={EDITOR_PROPS}\n                  tabSize={2}\n                  showLineNumbers={true}\n                  setOptions={ACE_PREVIEW_OPTIONS}\n                />\n                <div ref={this.onIframeRef} />\n              </div>\n            </div>\n          </>\n        )}\n      </MediaQuery>\n    );\n  }\n}\n\nfunction simplePrettier(code) {\n  return code\n    .split('\\n')\n    .filter(line => line.trim() !== '')\n    .map(line =>\n      /^[\\s\\t]*(const|document|if|function)/.test(line) ? '\\n' + line : line\n    )\n    .join('\\n')\n    .trim();\n}\n\nfunction codeToHtml(code) {\n  return `<html>\n    <body>\n      <div id=\"app\" />\n    </body>\n    <script type=\"text/javascript\">${code}</script>\n  </html>`;\n}\n\nexport default withRouter(Demo);\n","import React, { Component } from 'react';\nimport { BrowserRouter, HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home/Home';\nimport Demo from './Demo/Demo';\nimport './App.scss';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/damu\">\n        <Router>\n          <>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/repl\" exact component={Demo} />\n          </>\n        </Router>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\"01 simple\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <h1 id=\\\"title\\\" height={54}>\\n    Hello world\\n  </h1>,\\n  document.querySelector('#app')\\n);\\n\",\"02 fragment\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <>\\n    <h2>The Damu-Madu Project</h2>\\n    <p>\\n      The Damu-Madu sister project aims to bring the developer experience of\\n      writing JSX (XML in JavaScript) without having to use React.\\n    </p>\\n    <p>\\n      JSX is independent of React, you don't have to use React just to use JSX\\n      in your development process.\\n    </p>\\n    <p>\\n      The Damu-Madu sister project contains solution for both client render and\\n      server render:\\n    </p>\\n    <ul>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/madu\\\">madu</a> - Writing jsx as if\\n        html string\\n      </li>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/damu\\\">damu</a> - Converts jsx to\\n        vanilla javascript\\n      </li>\\n    </ul>\\n  </>,\\n  document.querySelector('#app')\\n);\\n\",\"03 list\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <div className=\\\"body\\\">\\n    <h1 className=\\\"header\\\">You shall not pass</h1>\\n    <ul>\\n      <li id=\\\"frodo\\\">Frodo Baggins</li>\\n      <li id=\\\"samwise\\\">Samwise Gamgee</li>\\n      <li id=\\\"gandalf\\\">Gandalf the Grey</li>\\n      <li id=\\\"legolas\\\">Legolas</li>\\n      <li id=\\\"gimli\\\">Gimli</li>\\n      <li id=\\\"aragorn\\\">Aragorn</li>\\n      <li id=\\\"boromir\\\">Boromir</li>\\n      <li id=\\\"meriadoc\\\">Meriadoc</li>\\n      <li id=\\\"peregrin\\\">Peregrin</li>\\n    </ul>\\n  </div>,\\n  document.querySelector('#app')\\n);\\n\",\"04 map\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nconst buyers = [\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [{ firstName: 'James', lastName: 'Steven' }],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n];\\n\\nReactDOM.render(\\n  <ul>\\n    {buyers.map(buyer => (\\n      <li>\\n        {buyer.firstName + ' - ' + buyer.lastName}\\n        {buyer.followers.map((follower, index) => (\\n          <>\\n            <li>\\n              {index + '. ' + follower.firstName + ' - ' + follower.lastName}\\n            </li>\\n            <li className=\\\"hidden\\\">{index % 2 == 0 ? 'odd' : 'even'}</li>\\n          </>\\n        ))}\\n      </li>\\n    ))}\\n  </ul>,\\n  document.querySelector('#app')\\n);\\n\",\"05 events\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <div\\n    style={{\\n      cursor: 'pointer',\\n      padding: 10,\\n      border: '1px solid black',\\n      display: 'inline-block',\\n    }}\\n    onClick={() => {\\n      alert('Hello Damu!');\\n    }}\\n  >\\n    Click Me\\n  </div>,\\n  document.querySelector('#app')\\n);\\n\"}"],"sourceRoot":""}