{"version":3,"sources":["Demo/Demo.scss","Home/Home.scss","Home/Home.js","../../babel-transform-damu-plugin/src/boilerplates.js","../../babel-transform-damu-plugin/src/flags.js","../../babel-transform-damu-plugin/src/transform/trasnformers.js","../../babel-transform-damu-plugin/src/utils/index.js","../../babel-transform-damu-plugin/src/transform/class.js","../../babel-transform-damu-plugin/src/transform/attributes/event-listeners.js","../../babel-transform-damu-plugin/src/transform/attributes/index.js","../../babel-transform-damu-plugin/src/api/document/create-text-node.js","../../babel-transform-damu-plugin/src/api/append-child.js","../../babel-transform-damu-plugin/src/transform/elements.js","../../babel-transform-damu-plugin/src/utils/normalize-block-statement.js","../../babel-transform-damu-plugin/src/transform/identifier.js","../../babel-transform-damu-plugin/src/utils/get-identifier-name.js","../../babel-transform-damu-plugin/src/api/document/create-element.js","../../babel-transform-damu-plugin/src/transform/expressions.js","../../babel-transform-damu-plugin/src/index.js","../../babel-preset-damu/index.js","Demo/Demo.js","App.js","serviceWorker.js","index.js","Demo/demos/index.js"],"names":["module","exports","App","navbar","brand","preview","previewDashboard","preview-html","preview-both","preview-code","title","subtitle","button","Home","react_default","a","createElement","className","styles","Link","to","APPEND_CHILDREN","parse","APPEND_CHILD_WITH_COMPONENT","_len","arguments","length","fns","Array","_key","Object","_babel_core_lib","join","program","body","flags","Symbol","APPEND_COMPONENT","turnOnFlag","path","flag","findParent","parent","isProgram","findProgram","transformers","transform","transformer","node","type","Error","injectTransformer","declareConst","identifier","value","types_lib","isEmptyJSXText","trim","ifBlock","condition","thenCase","elseCase","thenCaseArray","isArray","elseCaseArray","get","remove","constructor","find","method","isIdentifier","name","callSuper","statement","isCallExpression","isSuper","removeSuper","setStateMap","traverse","MemberExpression","cpath","isThisExpression","args","parentPath","isObjectExpression","forEach","property","key","push","_loop","stateKey","stateIdentifier","scope","generateUidIdentifier","pushContainer","callers","caller","replaceWithMultiple","properties","thisStateDeclaration","expression","isAssignmentExpression","isMemberExpression","map","DOM_EVENTS","handler","Map","_setAttribute","documentCreateTextNode","appendChild","child","transformJSXText","statements","normalizeBlockStatement","replaceWith","transformIdentifier","set","element","stringOrObject","styleObject","_ref","appendPx","_styleObject","styleString","_styleString","useCapture","eventName","slice","toLowerCase","includes","replace","filter","Boolean","getIdentifierName","object","openingElement","test","result","declaration","elemName","documentCreateElement","attributes","attr","_value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","iterator","next","done","matchKey","err","return","setAttribute","elem","children","apply","toConsumableArray","has","isArrowFunctionExpression","isFunctionExpression","isMapCallExpression","mapperBody","returnStatement","b","isReturnStatement","argument","_statements","transformMapCallExpresion","operator","consequent","left","transformLogicalAndExpression","alternate","transformLogicalOrExpression","babel_transform_damu_plugin_src","helper_plugin_utils_lib","api","options","assertVersion","inherits","plugin_syntax_jsx_lib_default","visitor","JSXElement","_transformElement","unshiftIntoBlock","JSXFragment","list","_path$get$filter$map$","reduce","_result$statements","identifiers","CallExpression","enter","exit","isDamuRender","target","ImportDeclaration","source","ClassDeclaration","Program","bindings","React","ReactDOM","binding","blockPath","blockList","insertBefore","unshiftContainer","babel_preset_damu","opts","plugins","plugin_syntax_class_properties_lib_default","demoList","demos","EDITOR_PROPS","$blockScrolling","ACE_PREVIEW_OPTIONS","useWorker","getSelectedFromHash","hash","decodeURIComponent","Demo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","error","transpile","onChangeTemplate","event","history","location","pathname","currentTarget","onChangeDemo","selectedDemo","onPreviewModeChange","previewMode","code","babel","presets","damuPreset","then","transpiled","split","line","iframe","firstChild","removeChild","document","previewIframe","contentDocument","contentWindow","open","write","concat","codeToHtml","close","catch","console","message","onIframeRef","ref","state","prevProps","_this2","react_responsive_default","minWidth","match","Fragment","demo","rel","href","lib_default","height","width","mode","theme","fontSize","showGutter","editorProps","tabSize","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","id","checked","readOnly","setOptions","Component","withRouter","BrowserRouter","basename","HashRouter","Route","exact","component","window","hostname","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","01 simple","02 fragment","03 list","04 map","05 events","06 component"],"mappings":"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","file":"static/js/main.d5b0b7e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3HGgo8YmsRzzR-43XGuiVo\",\"navbar\":\"gBnLqs9WpuhQyk5qcuBFE\",\"brand\":\"_1ANlngfxtlZL_wfXyTiiOt\",\"preview\":\"_1g_0nYQynQCg9NHI5earA\",\"previewDashboard\":\"_2dc8blJjyeHHcxcYajKPbp\",\"preview-html\":\"_2I0726fxMFLvUluQZyK_h2\",\"preview-both\":\"_1XiMwV8qMU22Ph0eS3Pi0D\",\"preview-code\":\"_8wfWpLf3i2rFaC1LnaJXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_2MqrEPH7wRGTUnAVXplCQU\",\"title\":\"_24SQRvaGQXqT_X5Wyx2Ndf\",\"subtitle\":\"m60etY5PtB6SdZqnydOx6\",\"button\":\"_36HiqEt255U7c_x1fj-oiL\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Home.scss';\n\nexport default function Home() {\n  return (\n    <div className={styles.App}>\n      <div>\n        <h1 className={styles.title}>Damu</h1>\n        <h2 className={styles.subtitle}>A React Compiler</h2>\n        <Link to=\"/repl\">\n          <button className={styles.button}>REPL</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import { parseSync } from '@babel/core';\nexport var APPEND_CHILDREN = parse(\"function __damu__appendChildren(\\n  parent,\\n  children\\n) {\\n  children = Array.isArray(children) ? children : [children];\\n  children.forEach(function(child) {\\n    parent.appendChild(child);\\n  });\\n}\");\nexport var APPEND_CHILD_WITH_COMPONENT = parse(\"function __damu__appendChildren(parent, children) {\\n    children = Array.isArray(children) ? children : [children];\\n    children.forEach(function(child) {\\n      if (typeof child.render === 'function') {\\n        child = child.render();\\n      }\\n      parent.appendChild(child);\\n    });\\n  }\");\n\nfunction parse() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return parseSync(fns.join('')).program.body[0];\n}","export default {\n  APPEND_CHILDREN: Symbol('__has_appendChildren__'),\n  APPEND_COMPONENT: Symbol('__has_appendComponent__')\n};\nexport function turnOnFlag(path, flag) {\n  findProgram(path)[flag] = true;\n}\n\nfunction findProgram(path) {\n  return path.findParent(function (parent) {\n    return parent.isProgram();\n  });\n}","var transformers = {};\nexport function transform(path, parent) {\n  var transformer = transformers[path.node.type];\n\n  if (typeof transformer === 'function') {\n    return transformer(path, parent);\n  }\n\n  throw new Error('Unknown expression type: ' + path.node.type);\n}\nexport function injectTransformer(type, transformer) {\n  transformers[type] = transformer;\n}","import * as t from '@babel/types';\nexport function declareConst(identifier, value) {\n  return t.variableDeclaration('const', [t.variableDeclarator(identifier, value)]);\n}\nexport function isEmptyJSXText(path) {\n  return !(path.node.type === 'JSXText' && path.node.value.trim() === '');\n}\nexport function isEmptyJSXTextNode(node) {\n  return !(node.type === 'JSXText' && node.value.trim() === '');\n}\nexport function toArray(list) {\n  return t.arrayExpression(list);\n}\nexport function ifBlock(condition, thenCase, elseCase) {\n  var thenCaseArray = thenCase ? Array.isArray(thenCase) ? thenCase : [thenCase] : [];\n  var elseCaseArray = elseCase ? Array.isArray(elseCase) ? elseCase : [elseCase] : [];\n  return t.ifStatement(condition, t.blockStatement(thenCaseArray), elseCase ? t.blockStatement(elseCaseArray) : null);\n}\nexport function isMapCallExpression(path) {\n  return path.has('callee') && path.get('callee').isMemberExpression() && path.get('callee.property').isIdentifier({\n    name: 'map'\n  }) && path.has('arguments') && path.get('arguments').length === 1 && (path.get('arguments.0').isArrowFunctionExpression() || path.get('arguments.0').isFunctionExpression());\n}","import * as t from '@babel/types';\nimport { transform as transformElement, injectTransformer } from './trasnformers';\ninjectTransformer('ClassDeclaration', transformClassDeclaration);\n\nfunction transformClassDeclaration(path) {\n  // remove super\n  removeSuper(path);\n  var setStateMap = {};\n  path.traverse({\n    MemberExpression: function MemberExpression(cpath) {\n      if (cpath.get('object').isThisExpression() && cpath.get('property').isIdentifier({\n        name: 'setState'\n      })) {\n        var args = cpath.parentPath.get('arguments.0');\n\n        if (args.isObjectExpression()) {\n          // TODO: split object expression to single object\n          args.get('properties').forEach(function (property) {\n            var key = property.get('key.name').node;\n            setStateMap[key] = setStateMap[key] || [];\n            setStateMap[key].push(cpath.parentPath);\n          });\n        }\n      }\n    }\n  });\n\n  var _loop = function _loop(stateKey) {\n    var stateIdentifier = path.scope.generateUidIdentifier('set' + stateKey);\n    path.get('body').pushContainer('body', t.classMethod('method', stateIdentifier, [t.identifier(stateKey)], t.blockStatement([t.expressionStatement(t.assignmentExpression('=', t.memberExpression(t.thisExpression(), t.identifier(stateKey)), t.identifier(stateKey)))])));\n    var callers = setStateMap[stateKey];\n    callers.forEach(function (caller) {\n      var node = caller.node;\n      caller.replaceWithMultiple(t.callExpression(t.memberExpression(t.thisExpression(), stateIdentifier), [node.arguments[0].properties[0].value]));\n    });\n  };\n\n  for (var stateKey in setStateMap) {\n    _loop(stateKey);\n  } // this.state = {xxx} replace to this.xxx\n\n\n  var constructor = path.get('body.body').find(function (method) {\n    return method.get('key').isIdentifier({\n      name: 'constructor'\n    });\n  });\n\n  if (constructor) {\n    var thisStateDeclaration = constructor.get('body.body').find(function (statement) {\n      var expression = statement.get('expression');\n      return expression.isAssignmentExpression() && expression.get('left').isMemberExpression() && expression.get('left.object').isThisExpression() && expression.get('left.property').isIdentifier({\n        name: 'state'\n      }) && expression.get('right').isObjectExpression();\n    });\n\n    if (thisStateDeclaration) {\n      thisStateDeclaration.replaceWithMultiple(thisStateDeclaration.get('expression.right.properties').map(function (property) {\n        var key = property.node.key;\n        var value = property.node.value;\n        return t.expressionStatement(t.assignmentExpression('=', t.memberExpression(t.thisExpression(), key), value));\n      }));\n    }\n  }\n}\n\nfunction removeSuper(path) {\n  // remove super class\n  path.get('superClass').remove(); // remvoe super() in constructor\n\n  var constructor = path.get('body.body').find(function (method) {\n    return method.get('key').isIdentifier({\n      name: 'constructor'\n    });\n  });\n\n  if (constructor) {\n    var callSuper = constructor.get('body.body').find(function (statement) {\n      return statement.get('expression').isCallExpression() && statement.get('expression.callee').isSuper();\n    });\n\n    if (callSuper) {\n      callSuper.remove();\n    }\n  }\n}","export var DOM_EVENTS = ['abort', 'blur', 'canplay', 'canplaythrough', 'cancel', 'change', 'click', 'close', 'compositionend', 'compositionstart', 'compositionupdate', 'contextmenu', 'copy', 'cut', 'dblclick', 'auxclick', 'drag', 'dragend', 'dragenter', 'dragexit', 'dragleave', 'dragover', 'dragstart', 'drop', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'gotpointercapture', 'input', 'invalid', 'keydown', 'keypress', 'keyup', 'load', 'loadstart', 'loadeddata', 'loadedmetadata', 'lostpointercapture', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'paste', 'pause', 'play', 'playing', 'pointercancel', 'pointerdown', 'pointerenter', 'pointerleave', 'pointermove', 'pointerout', 'pointerover', 'pointerup', 'progress', 'ratechange', 'reset', 'scroll', 'seeked', 'seeking', 'selectionchange', 'stalled', 'submit', 'suspend', 'textInput', 'timeupdate', 'toggle', 'touchcancel', 'touchend', 'touchmove', 'touchstart', 'animationend', 'animationiteration', 'animationstart', 'transitionend', 'volumechange', 'waiting', 'wheel']; // TODO:\n\nvar DOM_VENDOR_EVENTS = ['animationend', 'animationiteration', 'animationstart', 'transitionend '];","import * as t from '@babel/types';\nimport { DOM_EVENTS } from './event-listeners';\nvar handler = new Map();\nhandler.set('className', _className);\nhandler.set('style', _style);\nhandler.set(/^on[A-Z]\\S+$/, _eventListener);\nexport function setAttribute(identifier, key, value, path) {\n  var _value = value.type === 'JSXExpressionContainer' ? value.expression : value;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = handler.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var matchKey = _step.value;\n\n      if (typeof matchKey === 'string' && key === matchKey) {\n        return handler.get(matchKey)(identifier, _value);\n      } else if (typeof matchKey.test === 'function' && matchKey.test(key)) {\n        return handler.get(matchKey)(identifier, key, _value);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return _setAttribute(identifier, key, _value);\n}\n\nfunction _setAttribute(identifier, key, value) {\n  return t.expressionStatement(t.callExpression(t.memberExpression(identifier, t.identifier('setAttribute')), [t.stringLiteral(key), value]));\n}\n\nfunction _className(element, className) {\n  // elem.className = className;\n  return t.expressionStatement(t.assignmentExpression('=', t.memberExpression(element, t.identifier('className')), className));\n}\n\nfunction _style(element, stringOrObject) {\n  switch (stringOrObject.type) {\n    case 'ObjectExpression':\n      return _styleObject(element, stringOrObject);\n\n    case 'StringLiteral':\n      return _styleString(element, stringOrObject);\n  }\n}\n\nfunction _styleString(element, styleString) {\n  return _setAttribute(element, 'style', styleString);\n}\n\nfunction _styleObject(element, styleObject) {\n  return styleObject.properties.map(function (_ref) {\n    var key = _ref.key,\n        value = _ref.value;\n    return t.expressionStatement(t.assignmentExpression('=', t.memberExpression(t.memberExpression(element, t.identifier('style')), key), appendPx(value)));\n  });\n}\n\nfunction appendPx(node) {\n  if (node.type === 'NumericLiteral') {\n    return t.stringLiteral(node.value + 'px');\n  }\n\n  return node;\n}\n\nfunction _eventListener(element, key, value) {\n  var useCapture = false;\n  var eventName = key.slice(2).toLowerCase();\n\n  if (!DOM_EVENTS.includes(eventName)) {\n    if (DOM_EVENTS.includes(eventName.replace('capture', ''))) {\n      eventName = eventName.replace('capture', '');\n      useCapture = true;\n    } else {\n      return _setAttribute(element, key, value);\n    }\n  }\n\n  return t.expressionStatement(t.callExpression(t.memberExpression(element, t.identifier('addEventListener')), [t.stringLiteral(eventName), value, useCapture && t.booleanLiteral(useCapture)].filter(Boolean)));\n}","import * as t from '@babel/types';\nimport { declareConst } from '../../utils';\nexport function documentCreateTextNode(identifier, node) {\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createTextNode')), [node]));\n}","import * as t from '@babel/types';\nimport Flags, { turnOnFlag } from '../flags';\nexport function appendChild(parent, child, path) {\n  turnOnFlag(path, Flags.APPEND_CHILDREN);\n  return t.expressionStatement(t.callExpression(t.identifier('__damu__appendChildren'), [parent, child]));\n}","import _toConsumableArray from \"/Users/lhtan/Projects/damu/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as t from '@babel/types';\nimport { transform as transformElement, injectTransformer } from './trasnformers';\nimport { isEmptyJSXText } from '../utils';\nimport { getIdentifierName } from '../utils/get-identifier-name';\nimport { setAttribute } from './attributes';\nimport { documentCreateElement } from '../api/document/create-element';\nimport { documentCreateTextNode } from '../api/document/create-text-node';\nimport { appendChild } from '../api/append-child';\nimport Flags, { turnOnFlag } from '../flags';\ninjectTransformer('JSXElement', transformJSXElement);\ninjectTransformer('JSXText', transformJSXText);\ninjectTransformer('StringLiteral', transformJSXText);\nexport function transformJSXElement(path, parent) {\n  var name = getIdentifierName(path.node.openingElement.name);\n  var identifier = path.scope.generateUidIdentifier(name);\n\n  if (/^[A-Z]/.test(name)) {\n    turnOnFlag(path, Flags.APPEND_COMPONENT); // component\n\n    var statements = [t.expressionStatement(t.assignmentExpression('=', identifier, t.newExpression(t.identifier(name), [])))];\n    return {\n      identifier: identifier,\n      statements: statements\n    };\n  } else {// dom\n  }\n\n  var result = [];\n  var declaration = documentCreateElement(identifier, name);\n  result.push(declaration);\n  var attributes = path.node.openingElement.attributes.map(function (attr) {\n    return setAttribute(identifier, attr.name.name, attr.value, path);\n  });\n  attributes.forEach(function (attr) {\n    return result.push(attr);\n  });\n  var childrens = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n    return transformElement(elem, identifier);\n  }).map(function (_ref) {\n    var statements = _ref.statements;\n    return statements;\n  });\n  childrens.forEach(function (children) {\n    return result.push.apply(result, _toConsumableArray(children));\n  });\n\n  if (parent) {\n    result.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: result\n  };\n}\nexport function transformJSXText(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('text');\n  var statements = [documentCreateTextNode(identifier, t.stringLiteral(path.node.value))];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}","import * as t from '@babel/types';\nexport function normalizeBlockStatement(path) {\n  if (path.node.type !== 'BlockStatement') {\n    path.replaceWith(t.blockStatement([t.returnStatement(path.node)]));\n  }\n\n  return path;\n}","import { transform as transformElement, injectTransformer } from './trasnformers';\nimport { appendChild } from '../api/append-child';\ninjectTransformer('Identifier', transformIdentifier);\ninjectTransformer('MemberExpression', transformIdentifier);\nexport function transformIdentifier(path, parent) {\n  var identifier = path.node;\n  var statements = parent ? [appendChild(parent, identifier, path)] : [];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}","export function getIdentifierName(node) {\n  switch (node.type) {\n    case 'JSXMemberExpression':\n      return getIdentifierName(node.object) + '.' + getIdentifierName(node.property);\n\n    case 'JSXIdentifier':\n      return node.name;\n\n    default:\n      throw new Error('Unknown type: ' + node.type);\n  }\n}","import * as t from '@babel/types';\nimport { declareConst } from '../../utils';\nexport function documentCreateElement(identifier, elemName) {\n  // handle functional component?\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createElement')), [t.stringLiteral(elemName)]));\n}","import * as t from '@babel/types';\nimport { transform as transformElement, injectTransformer } from './trasnformers';\nimport { declareConst, isMapCallExpression, ifBlock } from '../utils';\nimport { documentCreateTextNode } from '../api/document/create-text-node';\nimport { appendChild } from '../api/append-child';\nimport { normalizeBlockStatement } from '../utils/normalize-block-statement';\ninjectTransformer('JSXExpressionContainer', transformJSXExpression);\ninjectTransformer('BinaryExpression', transformBinaryExpression);\ninjectTransformer('CallExpression', transformCallExpression);\ninjectTransformer('LogicalExpression', transformLogicalExpression);\ninjectTransformer('ConditionalExpression', transformConditionalExpression);\nexport function transformJSXExpression(path, parent) {\n  return transformElement(path.get('expression'), parent);\n}\n\nfunction transformBinaryExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [documentCreateTextNode(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nexport function transformCallExpression(path, parent) {\n  if (isMapCallExpression(path)) {\n    return transformMapCallExpresion(path, parent);\n  } // normal call expression\n\n\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [declareConst(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier, path));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\nexport function transformMapCallExpresion(path, parent) {\n  normalizeBlockStatement(path.get('arguments.0.body'));\n\n  if (parent) {\n    // arr.forEach(i => parent.appendChild(i))\n    path.get('callee.property').replaceWith(t.identifier('forEach'));\n    var mapperBody = path.get('arguments.0.body.body');\n    var returnStatement = mapperBody.find(function (b) {\n      return b.isReturnStatement();\n    });\n\n    if (returnStatement) {\n      returnStatement.replaceWith(appendChild(parent, returnStatement.node.argument, path));\n    }\n\n    var statements = [t.expressionStatement(path.node)];\n    return {\n      identifier: null,\n      statements: statements\n    };\n  } else {\n    // identifier = arr.map(i => i)\n    var identifier = path.scope.generateUidIdentifier('lists');\n    var _statements = [declareConst(identifier, path.node)];\n    return {\n      identifier: identifier,\n      statements: _statements\n    };\n  }\n}\nexport function transformLogicalExpression(path, parent) {\n  switch (path.node.operator) {\n    case '&&':\n      return transformLogicalAndExpression(path, parent);\n\n    case '||':\n      return transformLogicalOrExpression(path, parent);\n  }\n\n  throw new Error('Unknown logical operator: ' + path.node.operator);\n}\nexport function transformLogicalAndExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\nexport function transformLogicalOrExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('left'), parent);\n  var alternate = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\nexport function transformConditionalExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('consequent'), parent);\n  var alternate = transformElement(path.get('alternate'), parent);\n  var statements = [ifBlock(path.node.test, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}","import _toConsumableArray from \"/Users/lhtan/Projects/damu/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport jsx from '@babel/plugin-syntax-jsx';\nimport { declare } from '@babel/helper-plugin-utils';\nimport * as t from '@babel/types';\nimport { APPEND_CHILDREN, APPEND_CHILD_WITH_COMPONENT } from './boilerplates';\nimport Flags, { turnOnFlag } from './flags';\nimport { transform as transformElement } from './transform';\nimport { isEmptyJSXText, toArray } from './utils';\nimport { normalizeBlockStatement } from './utils/normalize-block-statement';\nimport { appendChild } from './api/append-child';\nexport default declare(function (api, options) {\n  api.assertVersion(7);\n  return {\n    name: 'babel-transform-damu-plugin',\n    inherits: jsx,\n    visitor: {\n      JSXElement: function JSXElement(path) {\n        var _transformElement = transformElement(path),\n            identifier = _transformElement.identifier,\n            statements = _transformElement.statements;\n\n        path.replaceWith(identifier);\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      JSXFragment: function JSXFragment(path) {\n        var _path$get$filter$map$ = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n          return transformElement(elem);\n        }).reduce(function (result, _ref) {\n          var _result$statements;\n\n          var identifier = _ref.identifier,\n              statements = _ref.statements;\n          result.identifiers.push(identifier);\n\n          (_result$statements = result.statements).push.apply(_result$statements, _toConsumableArray(statements));\n\n          return result;\n        }, {\n          identifiers: [],\n          statements: []\n        }),\n            identifiers = _path$get$filter$map$.identifiers,\n            statements = _path$get$filter$map$.statements;\n\n        path.replaceWith(toArray(identifiers));\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      CallExpression: {\n        enter: function enter(path) {\n          if (path.has('arguments.0.type') && ['ArrowFunctionExpression', 'FunctionExpression'].includes(path.get('arguments.0.type').node)) {\n            normalizeBlockStatement(path.get('arguments.0.body'));\n          }\n        },\n        exit: function exit(path) {\n          if (isDamuRender(path)) {\n            var args = path.node.arguments;\n            var elem = args[0];\n            var target = args[1];\n            path.replaceWith(appendChild(target, elem, path));\n          }\n        }\n      },\n      ImportDeclaration: function ImportDeclaration(path) {\n        if (['react', 'react-dom'].includes(path.node.source.value)) {\n          path.remove();\n        }\n      },\n      ClassDeclaration: function ClassDeclaration(path) {\n        if (path.has('superClass') && (path.get('superClass').isMemberExpression() && path.get('superClass.object').isIdentifier({\n          name: 'React'\n        }) && path.get('superClass.property').isIdentifier({\n          name: 'Component'\n        }) || path.get('superClass').isIdentifier({\n          name: 'Component '\n        }))) {\n          transformElement(path);\n        }\n      },\n      Program: {\n        exit: function exit(path) {\n          var reactBindings = [path.scope.bindings.React, path.scope.bindings.ReactDOM];\n          reactBindings.forEach(function (binding) {\n            if (binding) {\n              binding.path.remove();\n            }\n          });\n\n          if (path[Flags.APPEND_CHILDREN]) {\n            if (path[Flags.APPEND_COMPONENT]) {\n              path.pushContainer('body', APPEND_CHILD_WITH_COMPONENT);\n            } else {\n              path.pushContainer('body', APPEND_CHILDREN);\n            }\n          }\n        }\n      }\n    }\n  };\n});\n\nfunction isDamuRender(path) {\n  return path.has('callee') && path.get('callee').isMemberExpression() && path.get('callee.object').isIdentifier({\n    name: 'ReactDOM'\n  }) && path.get('callee.property').isIdentifier({\n    name: 'render'\n  });\n}\n\nfunction unshiftIntoBlock(path, statement) {\n  var blockPath = path.scope.path;\n\n  switch (blockPath.node.type) {\n    case 'ArrowFunctionExpression':\n    case 'FunctionExpression':\n    case 'FunctionDeclaration':\n    case 'ClassMethod':\n      blockPath = blockPath.get('body');\n      break;\n  }\n\n  var blockList = blockPath.get('body');\n  var findParent = path;\n\n  while (findParent) {\n    if (blockList.includes(findParent)) {\n      break;\n    }\n\n    findParent = findParent.parentPath;\n  }\n\n  if (findParent) {\n    findParent.insertBefore(statement);\n  } else {\n    // give up\n    blockPath.unshiftContainer('body', statement);\n  }\n}","import { declare } from '@babel/helper-plugin-utils';\nimport syntaxClassProperties from '@babel/plugin-syntax-class-properties';\nimport transformDamu from '@damu/babel-transform-damu-plugin';\nexport default declare(function (api, opts) {\n  api.assertVersion(7);\n  return {\n    plugins: [syntaxClassProperties, transformDamu]\n  };\n});","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\n\nimport AceEditor from 'react-ace';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\n\nimport * as babel from '@babel/core';\nimport damuPreset from '@damu/babel-preset-damu';\nimport demos from './demos';\n\nimport styles from './Demo.scss';\n\nconst demoList = Object.keys(demos);\nconst EDITOR_PROPS = { $blockScrolling: true };\nconst ACE_PREVIEW_OPTIONS = { useWorker: false };\n\nfunction getSelectedFromHash(hash) {\n  hash = decodeURIComponent(hash.slice(1));\n  if (demoList.includes(hash)) {\n    return hash;\n  }\n  return '01 simple';\n}\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    const selectedDemo = getSelectedFromHash(props.location.hash);\n    this.state = {\n      value: demos[selectedDemo],\n      selectedDemo,\n      transpiled: '',\n      error: null,\n      previewMode: 'code',\n    };\n  }\n  onChange = value => {\n    this.setState({ value, error: null });\n    this.transpile(value);\n  };\n\n  onChangeTemplate = event => {\n    this.props.history.replace(\n      this.props.location.pathname + '#' + event.currentTarget.value\n    );\n  };\n\n  onChangeDemo = selectedDemo => {\n    const value = demos[selectedDemo];\n    this.setState({\n      selectedDemo,\n      value,\n      error: null,\n    });\n    this.transpile(value);\n  };\n\n  onPreviewModeChange = event => {\n    this.setState({\n      previewMode: event.currentTarget.value,\n    });\n  };\n\n  componentDidMount() {\n    this.transpile(this.state.value);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.hash !== this.props.location.hash) {\n      this.onChangeDemo(getSelectedFromHash(this.props.location.hash));\n    }\n  }\n\n  transpile = code => {\n    babel\n      .transformAsync(code, {\n        presets: [damuPreset],\n      })\n      .then(result => {\n        this.setState({ transpiled: simplePrettier(result.code) });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n          //\n          const iframe = document.createElement('iframe');\n          this.iframe.appendChild(iframe);\n\n          var previewIframe =\n            iframe.contentDocument || iframe.contentWindow.document;\n          previewIframe.open();\n          previewIframe.write(codeToHtml(result.code));\n          previewIframe.close();\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({ transpiled: '', error: error.message });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n        }\n      });\n  };\n\n  onIframeRef = ref => {\n    this.iframe = ref;\n  };\n\n  render() {\n    const { previewMode } = this.state;\n    return (\n      <MediaQuery minWidth={600}>\n        {match => (\n          <>\n            <div className={styles.navbar}>\n              <Link to=\"/\" className={styles.brand}>\n                Damu\n              </Link>\n              <label>\n                {'Demo: '}\n                <select\n                  onChange={this.onChangeTemplate}\n                  value={this.state.selectedDemo}\n                >\n                  {demoList.map(demo => (\n                    <option key={demo} value={demo}>\n                      {demo}\n                    </option>\n                  ))}\n                </select>\n              </label>\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                href=\"https://github.com/tanhauhau/damu\"\n              >\n                View it on Github\n              </a>\n            </div>\n            <div className={styles.App}>\n              <AceEditor\n                height={match ? 'calc(100vh - 50px)' : '80vh'}\n                width={match ? '50vw' : '100vw'}\n                mode=\"jsx\"\n                theme=\"tomorrow\"\n                fontSize={14}\n                onChange={this.onChange}\n                showGutter={true}\n                name=\"editor\"\n                value={this.state.value}\n                editorProps={EDITOR_PROPS}\n                tabSize={2}\n                enableBasicAutocompletion={true}\n                enableLiveAutocompletion={true}\n                showLineNumbers={true}\n              />\n              <div\n                className={\n                  styles.preview + ' ' + styles['preview-' + previewMode]\n                }\n              >\n                <div className={styles.previewDashboard}>\n                  <div>\n                    <label>\n                      <input\n                        id=\"both\"\n                        value=\"both\"\n                        name=\"preview-mode\"\n                        type=\"radio\"\n                        checked={previewMode === 'both'}\n                        onChange={this.onPreviewModeChange}\n                      />\n                      Both\n                    </label>\n                    <label>\n                      <input\n                        id=\"code\"\n                        value=\"code\"\n                        name=\"preview-mode\"\n                        type=\"radio\"\n                        checked={previewMode === 'code'}\n                        onChange={this.onPreviewModeChange}\n                      />\n                      Code\n                    </label>\n                    <label>\n                      <input\n                        id=\"html\"\n                        value=\"html\"\n                        name=\"preview-mode\"\n                        type=\"radio\"\n                        checked={previewMode === 'html'}\n                        onChange={this.onPreviewModeChange}\n                      />\n                      HTML\n                    </label>\n                  </div>\n                </div>\n                <AceEditor\n                  height={`calc(${previewMode === 'code' ? 100 : 50}vh - 80px)`}\n                  width={match ? '50vw' : '100vw'}\n                  mode=\"javascript\"\n                  theme=\"tomorrow\"\n                  readOnly={true}\n                  fontSize={14}\n                  showGutter={true}\n                  name=\"preview\"\n                  value={this.state.error || this.state.transpiled}\n                  editorProps={EDITOR_PROPS}\n                  tabSize={2}\n                  showLineNumbers={true}\n                  setOptions={ACE_PREVIEW_OPTIONS}\n                />\n                <div ref={this.onIframeRef} />\n              </div>\n            </div>\n          </>\n        )}\n      </MediaQuery>\n    );\n  }\n}\n\nfunction simplePrettier(code) {\n  return code\n    .split('\\n')\n    .filter(line => line.trim() !== '')\n    .map(line =>\n      /^[\\s\\t]*(const|document|if|function)/.test(line) ? '\\n' + line : line\n    )\n    .join('\\n')\n    .trim();\n}\n\nfunction codeToHtml(code) {\n  return `<html>\n    <body>\n      <div id=\"app\" />\n    </body>\n    <script type=\"text/javascript\">${code}</script>\n  </html>`;\n}\n\nexport default withRouter(Demo);\n","import React, { Component } from 'react';\nimport { BrowserRouter, HashRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home/Home';\nimport Demo from './Demo/Demo';\nimport './App.scss';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/damu\">\n        <Router>\n          <>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/repl\" exact component={Demo} />\n          </>\n        </Router>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\"01 simple\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <h1 id=\\\"title\\\" height={54}>\\n    Hello world\\n  </h1>,\\n  document.querySelector('#app')\\n);\\n\",\"02 fragment\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <>\\n    <h2>The Damu-Madu Project</h2>\\n    <p>\\n      The Damu-Madu sister project aims to bring the developer experience of\\n      writing JSX (XML in JavaScript) without having to use React.\\n    </p>\\n    <p>\\n      JSX is independent of React, you don't have to use React just to use JSX\\n      in your development process.\\n    </p>\\n    <p>\\n      The Damu-Madu sister project contains solution for both client render and\\n      server render:\\n    </p>\\n    <ul>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/madu\\\">madu</a> - Writing jsx as if\\n        html string\\n      </li>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/damu\\\">damu</a> - Converts jsx to\\n        vanilla javascript\\n      </li>\\n    </ul>\\n  </>,\\n  document.querySelector('#app')\\n);\\n\",\"03 list\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <div className=\\\"body\\\">\\n    <h1 className=\\\"header\\\">You shall not pass</h1>\\n    <ul>\\n      <li id=\\\"frodo\\\">Frodo Baggins</li>\\n      <li id=\\\"samwise\\\">Samwise Gamgee</li>\\n      <li id=\\\"gandalf\\\">Gandalf the Grey</li>\\n      <li id=\\\"legolas\\\">Legolas</li>\\n      <li id=\\\"gimli\\\">Gimli</li>\\n      <li id=\\\"aragorn\\\">Aragorn</li>\\n      <li id=\\\"boromir\\\">Boromir</li>\\n      <li id=\\\"meriadoc\\\">Meriadoc</li>\\n      <li id=\\\"peregrin\\\">Peregrin</li>\\n    </ul>\\n  </div>,\\n  document.querySelector('#app')\\n);\\n\",\"04 map\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nconst buyers = [\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [{ firstName: 'James', lastName: 'Steven' }],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n];\\n\\nReactDOM.render(\\n  <ul>\\n    {buyers.map(buyer => (\\n      <li>\\n        {buyer.firstName + ' - ' + buyer.lastName}\\n        {buyer.followers.map((follower, index) => (\\n          <>\\n            <li>\\n              {index + '. ' + follower.firstName + ' - ' + follower.lastName}\\n            </li>\\n            <li className=\\\"hidden\\\">{index % 2 == 0 ? 'odd' : 'even'}</li>\\n          </>\\n        ))}\\n      </li>\\n    ))}\\n  </ul>,\\n  document.querySelector('#app')\\n);\\n\",\"05 events\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <div\\n    style={{\\n      cursor: 'pointer',\\n      padding: 10,\\n      border: '1px solid black',\\n      display: 'inline-block',\\n    }}\\n    onClick={() => {\\n      alert('Hello Damu!');\\n    }}\\n  >\\n    Click Me\\n  </div>,\\n  document.querySelector('#app')\\n);\\n\",\"06 component\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nclass CounterApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      counter: 0,\\n    };\\n  }\\n\\n  onIncrement = () => {\\n    this.setState({ counter: this.state.counter + 1 });\\n  };\\n  onDecrement = () => {\\n    this.setState({ counter: this.state.counter - 1 });\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <div>{'counter: ' + this.state.counter}</div>\\n        <button onClick={this.onIncrement}>+</button>\\n        <button onClick={this.onDecrement}>-</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<CounterApp />, document.querySelector('#app'));\\n\"}"],"sourceRoot":""}