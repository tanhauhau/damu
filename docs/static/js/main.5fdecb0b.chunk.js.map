{"version":3,"sources":["Demo/Demo.scss","Home/Home.scss","Home/Home.js","../../babel-transform-damu-plugin/src/index.js","Demo/Demo.js","App.js","serviceWorker.js","index.js","Demo/demos/index.js"],"names":["module","exports","App","navbar","brand","preview","previewDashboard","preview-html","preview-both","preview-code","title","subtitle","button","Home","react_default","a","createElement","className","styles","Link","to","babel_transform_damu_plugin_src","Object","helper_plugin_utils_lib","api","options","assertVersion","name","inherits","plugin_syntax_jsx_lib_default","visitor","JSXElement","path","_transformJSXElement","transformJSXElement","identifier","statements","replaceWith","forEach","statement","unshiftIntoBlock","JSXFragment","list","_path$get$filter$map$","get","filter","isEmptyJSXText","map","elem","transformElement","reduce","result","_ref","_result$statements","identifiers","push","apply","toConsumableArray","types_lib","CallExpression","exit","node","callee","type","object","property","args","arguments","target","appendChild","ImportDeclaration","includes","source","value","remove","Program","scope","bindings","React","ReactDOM","binding","parent","generateUidIdentifier","documentCreateTextNode","transformJSXText","expression","transformBinaryExpression","length","normalizeBlockStatement","mapperBody","returnStatement","find","b","argument","_statements","declareConst","transformMapCallExpresion","transformCallExpression","operator","consequent","ifBlock","left","transformLogicalAndExpression","alternate","transformLogicalOrExpression","Error","transformLogicalExpression","test","transformConditionalExpression","transformJSXExpression","transformIdentifier","getIdentifierName","openingElement","declaration","elemName","documentCreateElement","attributes","attr","key","_value","setAttribute","_ref2","children","child","elements","c","isEmptyJSXTextNode","trim","condition","thenCase","elseCase","thenCaseArray","Array","isArray","elseCaseArray","blockPath","blockList","findParent","parentPath","insertBefore","unshiftContainer","demoList","keys","demos","EDITOR_PROPS","$blockScrolling","ACE_PREVIEW_OPTIONS","useWorker","Demo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","error","transpile","onChangeTemplate","event","currentTarget","onPreviewModeChange","previewMode","code","babel","plugins","damuPlugin","then","transpiled","split","line","join","iframe","firstChild","removeChild","document","previewIframe","contentDocument","contentWindow","open","write","concat","codeToHtml","close","catch","message","onIframeRef","ref","state","Fragment","demo","rel","href","lib_default","height","width","mode","theme","fontSize","showGutter","editorProps","tabSize","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","id","checked","readOnly","setOptions","Component","BrowserRouter","basename","Route","exact","component","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","01 simple","02 fragment","03 list","04 map"],"mappings":"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","file":"static/js/main.5fdecb0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3HGgo8YmsRzzR-43XGuiVo\",\"navbar\":\"gBnLqs9WpuhQyk5qcuBFE\",\"brand\":\"_1ANlngfxtlZL_wfXyTiiOt\",\"preview\":\"_1g_0nYQynQCg9NHI5earA\",\"previewDashboard\":\"_2dc8blJjyeHHcxcYajKPbp\",\"preview-html\":\"_2I0726fxMFLvUluQZyK_h2\",\"preview-both\":\"_1XiMwV8qMU22Ph0eS3Pi0D\",\"preview-code\":\"_8wfWpLf3i2rFaC1LnaJXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_2MqrEPH7wRGTUnAVXplCQU\",\"title\":\"_24SQRvaGQXqT_X5Wyx2Ndf\",\"subtitle\":\"m60etY5PtB6SdZqnydOx6\",\"button\":\"_36HiqEt255U7c_x1fj-oiL\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Home.scss';\n\nexport default function Home() {\n  return (\n    <div className={styles.App}>\n      <div>\n        <h1 className={styles.title}>Damu</h1>\n        <h2 className={styles.subtitle}>A React Compiler</h2>\n        <Link to=\"/repl\">\n          <button className={styles.button}>REPL</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import _toConsumableArray from \"/Users/tanlh/Project/damu/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport jsx from '@babel/plugin-syntax-jsx';\nimport { declare } from '@babel/helper-plugin-utils';\nimport * as t from '@babel/types';\nexport default declare(function (api, options) {\n  api.assertVersion(7);\n  return {\n    name: 'babel-transform-damu-plugin',\n    inherits: jsx,\n    visitor: {\n      JSXElement: function JSXElement(path) {\n        var _transformJSXElement = transformJSXElement(path),\n            identifier = _transformJSXElement.identifier,\n            statements = _transformJSXElement.statements;\n\n        path.replaceWith(identifier);\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      JSXFragment: function JSXFragment(path) {\n        var _path$get$filter$map$ = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n          return transformElement(elem);\n        }).reduce(function (result, _ref) {\n          var _result$statements;\n\n          var identifier = _ref.identifier,\n              statements = _ref.statements;\n          result.identifiers.push(identifier);\n\n          (_result$statements = result.statements).push.apply(_result$statements, _toConsumableArray(statements));\n\n          return result;\n        }, {\n          identifiers: [],\n          statements: []\n        }),\n            identifiers = _path$get$filter$map$.identifiers,\n            statements = _path$get$filter$map$.statements;\n\n        path.replaceWith(toArray(identifiers));\n        statements.forEach(function (statement) {\n          unshiftIntoBlock(path, statement);\n        });\n      },\n      CallExpression: {\n        exit: function exit(path) {\n          if (isDamuRender(path.node)) {\n            var args = path.node.arguments;\n            var elem = args[0];\n            var target = args[1];\n            path.replaceWith(appendChild(target, elem));\n          }\n        }\n      },\n      ImportDeclaration: function ImportDeclaration(path) {\n        if (['react', 'react-dom'].includes(path.node.source.value)) {\n          path.remove();\n        }\n      },\n      Program: {\n        exit: function exit(path) {\n          var reactBindings = [path.scope.bindings.React, path.scope.bindings.ReactDOM];\n          reactBindings.forEach(function (binding) {\n            if (binding) {\n              binding.path.remove();\n            }\n          }); // // console.log(path.scope.bindings.Damu.referencePaths.length);\n          // console.log('');\n          // console.log('');\n          // console.log('');\n          // console.log('');\n          // console.log('');\n          // console.log('');\n        }\n      }\n    }\n  };\n});\n\nfunction transformElement(path, parent) {\n  switch (path.node.type) {\n    case 'JSXElement':\n      return transformJSXElement(path, parent);\n\n    case 'JSXText':\n    case 'StringLiteral':\n      return transformJSXText(path, parent);\n\n    case 'JSXExpressionContainer':\n      return transformJSXExpression(path, parent);\n\n    case 'Identifier':\n    case 'MemberExpression':\n      return transformIdentifier(path, parent);\n\n    default:\n      throw new Error('Unknown element type: ' + path.node.type);\n  }\n}\n\nfunction transformJSXElement(path, parent) {\n  var name = getIdentifierName(path.node.openingElement.name);\n  var identifier = path.scope.generateUidIdentifier(name);\n  var result = [];\n  var declaration = documentCreateElement(identifier, name);\n  result.push(declaration);\n  var attributes = path.node.openingElement.attributes.map(function (attr) {\n    return setAttribute(identifier, attr.name.name, attr.value);\n  });\n  attributes.forEach(function (attr) {\n    return result.push(attr);\n  });\n  var childrens = path.get('children').filter(isEmptyJSXText).map(function (elem) {\n    return transformElement(elem, identifier);\n  }).map(function (_ref2) {\n    var statements = _ref2.statements;\n    return statements;\n  });\n  childrens.forEach(function (children) {\n    return result.push.apply(result, _toConsumableArray(children));\n  });\n\n  if (parent) {\n    result.push(appendChild(parent, identifier));\n  }\n\n  return {\n    identifier: identifier,\n    statements: result\n  };\n}\n\nfunction transformJSXText(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('text');\n  var statements = [documentCreateTextNode(identifier, t.stringLiteral(path.node.value))];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformJSXExpression(path, parent) {\n  switch (path.node.expression.type) {\n    case 'BinaryExpression':\n      return transformBinaryExpression(path.get('expression'), parent);\n\n    case 'CallExpression':\n      return transformCallExpression(path.get('expression'), parent);\n\n    case 'LogicalExpression':\n      return transformLogicalExpression(path.get('expression'), parent);\n\n    case 'ConditionalExpression':\n      return transformConditionalExpression(path.get('expression'), parent);\n\n    default:\n      return transformElement(path.get('expression'), parent);\n  }\n\n  throw new Error('Unknown expression type: ' + path.node.expression.type);\n}\n\nfunction transformBinaryExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [documentCreateTextNode(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformCallExpression(path, parent) {\n  if (isMapCallExpression(path.node)) {\n    return transformMapCallExpresion(path, parent);\n  } // normal call expression\n\n\n  var identifier = path.scope.generateUidIdentifier('result');\n  var statements = [declareConst(identifier, path.node)];\n\n  if (parent) {\n    statements.push(appendChild(parent, identifier));\n  }\n\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformMapCallExpresion(path, parent) {\n  normalizeBlockStatement(path.get('arguments.0.body'));\n\n  if (parent) {\n    // arr.forEach(i => parent.appendChild(i))\n    path.get('callee.property').replaceWith(t.identifier('forEach'));\n    var mapperBody = path.get('arguments.0.body.body');\n    var returnStatement = mapperBody.find(function (b) {\n      return b.node.type === 'ReturnStatement';\n    });\n\n    if (returnStatement) {\n      returnStatement.replaceWith(appendChild(parent, returnStatement.node.argument));\n    }\n\n    var statements = [t.expressionStatement(path.node)];\n    return {\n      identifier: null,\n      statements: statements\n    };\n  } else {\n    // identifier = arr.map(i => i)\n    var identifier = path.scope.generateUidIdentifier('lists'); // console.log(path.node);\n\n    var _statements = [declareConst(identifier, path.node)];\n    return {\n      identifier: identifier,\n      statements: _statements\n    };\n  }\n}\n\nfunction normalizeBlockStatement(path) {\n  if (path.node.type !== 'BlockStatement') {\n    path.replaceWith(t.blockStatement([t.returnStatement(path.node)]));\n  }\n\n  return path;\n}\n\nfunction transformLogicalExpression(path, parent) {\n  switch (path.node.operator) {\n    case '&&':\n      return transformLogicalAndExpression(path, parent);\n\n    case '||':\n      return transformLogicalOrExpression(path, parent);\n  }\n\n  throw new Error('Unknown logical operator: ' + path.node.operator);\n}\n\nfunction transformLogicalAndExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformLogicalOrExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('left'), parent);\n  var alternate = transformElement(path.get('right'), parent);\n  var statements = [ifBlock(path.node.left, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformConditionalExpression(path, parent) {\n  var identifier = path.scope.generateUidIdentifier('result');\n  var consequent = transformElement(path.get('consequent'), parent);\n  var alternate = transformElement(path.get('alternate'), parent);\n  var statements = [ifBlock(path.node.test, consequent.statements, alternate.statements)];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction transformIdentifier(path, parent) {\n  var identifier = path.node;\n  var statements = parent ? [appendChild(parent, identifier)] : [];\n  return {\n    identifier: identifier,\n    statements: statements\n  };\n}\n\nfunction getIdentifierName(node) {\n  switch (node.type) {\n    case 'JSXMemberExpression':\n      return getIdentifierName(node.object) + '.' + getIdentifierName(node.property);\n\n    case 'JSXIdentifier':\n      return node.name;\n\n    default:\n      throw new Error('Unknown type: ' + node.type);\n  }\n}\n\nfunction documentCreateElement(identifier, elemName) {\n  // handle functional component?\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createElement')), [t.stringLiteral(elemName)]));\n}\n\nfunction documentCreateTextNode(identifier, node) {\n  return declareConst(identifier, t.callExpression(t.memberExpression(t.identifier('document'), t.identifier('createTextNode')), [node]));\n}\n\nfunction declareConst(identifier, value) {\n  return t.variableDeclaration('const', [t.variableDeclarator(identifier, value)]);\n}\n\nfunction appendChild(parent, child) {\n  switch (child.type) {\n    case 'ArrayExpression':\n      return t.expressionStatement(t.sequenceExpression(child.elements.map(function (c) {\n        return appendChild(parent, c).expression;\n      })));\n\n    case 'JSXFragment':\n      return t.expressionStatement(t.sequenceExpression(child.children.filter(isEmptyJSXTextNode).map(function (c) {\n        return appendChild(parent, c).expression;\n      })));\n\n    default:\n      return t.expressionStatement(t.callExpression(t.memberExpression(parent, t.identifier('appendChild')), [child]));\n  }\n}\n\nfunction setAttribute(identifier, key, value) {\n  var _value = value.type === 'JSXExpressionContainer' ? value.expression : value;\n\n  return t.expressionStatement(t.callExpression(t.memberExpression(identifier, t.identifier('setAttribute')), [t.stringLiteral(key), _value]));\n}\n\nfunction isEmptyJSXText(path) {\n  return !(path.node.type === 'JSXText' && path.node.value.trim() === '');\n}\n\nfunction isEmptyJSXTextNode(node) {\n  return !(node.type === 'JSXText' && node.value.trim() === '');\n}\n\nfunction toArray(list) {\n  return t.arrayExpression(list);\n}\n\nfunction ifBlock(condition, thenCase, elseCase) {\n  var thenCaseArray = thenCase ? Array.isArray(thenCase) ? thenCase : [thenCase] : [];\n  var elseCaseArray = elseCase ? Array.isArray(elseCase) ? elseCase : [elseCase] : [];\n  return t.ifStatement(condition, t.blockStatement(thenCaseArray), elseCase ? t.blockStatement(elseCaseArray) : null);\n}\n\nfunction isDamuRender(node) {\n  return node.callee && node.callee.type === 'MemberExpression' && node.callee.object && node.callee.object.type === 'Identifier' && node.callee.object.name === 'ReactDOM' && node.callee.property.type === 'Identifier' && node.callee.property.name === 'render';\n}\n\nfunction unshiftIntoBlock(path, statement) {\n  var blockPath = path.scope.path;\n\n  switch (blockPath.node.type) {\n    case 'ArrowFunctionExpression':\n    case 'FunctionExpression':\n    case 'FunctionDeclaration':\n      blockPath = blockPath.get('body');\n      break;\n  }\n\n  var blockList = blockPath.get('body');\n  var findParent = path;\n\n  while (findParent) {\n    if (blockList.includes(findParent)) {\n      break;\n    }\n\n    findParent = findParent.parentPath;\n  }\n\n  if (findParent) {\n    findParent.insertBefore(statement);\n  } else {\n    // give up\n    blockPath.unshiftContainer('body', statement);\n  }\n}\n\nfunction isMapCallExpression(node) {\n  return node.callee && node.callee.type === 'MemberExpression' && node.callee.property && node.callee.property.type === 'Identifier' && node.callee.property.name === 'map' && node.arguments && node.arguments.length === 1 && ['FunctionExpression', 'ArrowFunctionExpression'].includes(node.arguments[0].type);\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AceEditor from 'react-ace';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\n\nimport * as babel from '@babel/core';\nimport damuPlugin from '@damu/babel-transform-damu-plugin';\nimport demos from './demos';\n\nimport styles from './Demo.scss';\n\nconst demoList = Object.keys(demos);\nconst EDITOR_PROPS = { $blockScrolling: true };\nconst ACE_PREVIEW_OPTIONS = { useWorker: false };\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: demos['01 simple'],\n      transpiled: '',\n      error: null,\n      previewMode: 'both',\n    };\n  }\n  onChange = value => {\n    this.setState({ value, error: null });\n    this.transpile(value);\n  };\n\n  onChangeTemplate = event => {\n    const value = demos[event.currentTarget.value];\n    this.setState({\n      value,\n      error: null,\n    });\n    this.transpile(value);\n  };\n\n  onPreviewModeChange = event => {\n    this.setState({\n      previewMode: event.currentTarget.value,\n    });\n  };\n\n  componentDidMount() {\n    this.transpile(this.state.value);\n  }\n\n  transpile = code => {\n    babel\n      .transformAsync(code, {\n        plugins: [damuPlugin],\n      })\n      .then(result => {\n        this.setState({ transpiled: simplePrettier(result.code) });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n          //\n          const iframe = document.createElement('iframe');\n          this.iframe.appendChild(iframe);\n\n          var previewIframe =\n            iframe.contentDocument || iframe.contentWindow.document;\n          previewIframe.open();\n          previewIframe.write(codeToHtml(result.code));\n          previewIframe.close();\n        }\n      })\n      .catch(error => {\n        this.setState({ transpiled: '', error: error.message });\n        if (this.iframe) {\n          while (this.iframe.firstChild) {\n            this.iframe.removeChild(this.iframe.firstChild);\n          }\n        }\n      });\n  };\n\n  onIframeRef = ref => {\n    this.iframe = ref;\n  };\n\n  render() {\n    const { previewMode } = this.state;\n    return (\n      <>\n        <div className={styles.navbar}>\n          <Link to=\"/\" className={styles.brand}>Damu</Link>\n          <label>\n            {'Demo: '}\n            <select onChange={this.onChangeTemplate}>\n              {demoList.map(demo => (\n                <option key={demo} value={demo}>\n                  {demo}\n                </option>\n              ))}\n            </select>\n          </label>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            href=\"https://github.com/tanhauhau/damu\"\n          >\n            View it on Github\n          </a>\n        </div>\n        <div className={styles.App}>\n          <AceEditor\n            height=\"calc(100vh - 50px)\"\n            width=\"50vw\"\n            mode=\"jsx\"\n            theme=\"tomorrow\"\n            fontSize={14}\n            onChange={this.onChange}\n            showGutter={true}\n            name=\"editor\"\n            value={this.state.value}\n            editorProps={EDITOR_PROPS}\n            tabSize={2}\n            enableBasicAutocompletion={true}\n            enableLiveAutocompletion={true}\n            showLineNumbers={true}\n          />\n          <div className={styles.preview + ' ' + styles['preview-'+previewMode]}>\n            <div className={styles.previewDashboard}>\n              <div>\n                <label>\n                  <input\n                    id=\"both\"\n                    value=\"both\"\n                    name=\"preview-mode\"\n                    type=\"radio\"\n                    checked={previewMode === 'both'}\n                    onChange={this.onPreviewModeChange}\n                  />\n                  Both\n                </label>\n                <label>\n                  <input\n                    id=\"code\"\n                    value=\"code\"\n                    name=\"preview-mode\"\n                    type=\"radio\"\n                    checked={previewMode === 'code'}\n                    onChange={this.onPreviewModeChange}\n                  />\n                  Code\n                </label>\n                <label>\n                  <input\n                    id=\"html\"\n                    value=\"html\"\n                    name=\"preview-mode\"\n                    type=\"radio\"\n                    checked={previewMode === 'html'}\n                    onChange={this.onPreviewModeChange}\n                  />\n                  HTML\n                </label>\n              </div>\n            </div>\n            <AceEditor\n              height={`calc(${previewMode === 'code' ? 100 : 50}vh - 80px)`}\n              width=\"50vw\"\n              mode=\"javascript\"\n              theme=\"tomorrow\"\n              readOnly={true}\n              fontSize={14}\n              showGutter={true}\n              name=\"preview\"\n              value={this.state.error || this.state.transpiled}\n              editorProps={EDITOR_PROPS}\n              tabSize={2}\n              showLineNumbers={true}\n              setOptions={ACE_PREVIEW_OPTIONS}\n            />\n            <div ref={this.onIframeRef} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction simplePrettier(code) {\n  return code\n    .split('\\n')\n    .filter(line => line.trim() !== '')\n    .map(line =>\n      /^[\\s\\t]*(const|document|if)/.test(line) ? '\\n' + line : line\n    )\n    .join('\\n')\n    .trim();\n}\n\nfunction codeToHtml(code) {\n  return `<html>\n    <body>\n      <div id=\"app\" />\n    </body>\n    <script type=\"text/javascript\">${code}</script>\n  </html>`;\n}\n\nexport default Demo;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home/Home';\nimport Demo from './Demo/Demo';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/damu\">\n        <>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/repl\" exact component={Demo} />\n        </>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\"01 simple\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <h1 id=\\\"title\\\" height={54}>\\n    Hello world\\n  </h1>,\\n  document.querySelector('#app')\\n);\\n\",\"02 fragment\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <>\\n    <h2>The Damu-Madu Project</h2>\\n    <p>\\n      The Damu-Madu sister project aims to bring the developer experience of\\n      writing JSX (XML in JavaScript) without having to use React.\\n    </p>\\n    <p>\\n      JSX is independent of React, you don't have to use React just to use JSX\\n      in your development process.\\n    </p>\\n    <p>\\n      The Damu-Madu sister project contains solution for both client render and\\n      server render:\\n    </p>\\n    <ul>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/madu\\\">madu</a> - Writing jsx as if\\n        html string\\n      </li>\\n      <li>\\n        <a href=\\\"https://github.com/tanhauhau/damu\\\">damu</a> - Converts jsx to\\n        vanilla javascript\\n      </li>\\n    </ul>\\n  </>,\\n  document.querySelector('#app')\\n);\\n\",\"03 list\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nReactDOM.render(\\n  <div className=\\\"body\\\">\\n    <h1 className=\\\"header\\\">You shall not pass</h1>\\n    <ul>\\n      <li id=\\\"frodo\\\">Frodo Baggins</li>\\n      <li id=\\\"samwise\\\">Samwise Gamgee</li>\\n      <li id=\\\"gandalf\\\">Gandalf the Grey</li>\\n      <li id=\\\"legolas\\\">Legolas</li>\\n      <li id=\\\"gimli\\\">Gimli</li>\\n      <li id=\\\"aragorn\\\">Aragorn</li>\\n      <li id=\\\"boromir\\\">Boromir</li>\\n      <li id=\\\"meriadoc\\\">Meriadoc</li>\\n      <li id=\\\"peregrin\\\">Peregrin</li>\\n    </ul>\\n  </div>,\\n  document.querySelector('#app')\\n);\\n\",\"04 map\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nconst buyers = [\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [{ firstName: 'James', lastName: 'Steven' }],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n  {\\n    firstName: 'James',\\n    lastName: 'Steven',\\n    followers: [\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n      { firstName: 'James', lastName: 'Steven' },\\n    ],\\n  },\\n];\\n\\nReactDOM.render(\\n  <ul>\\n    {buyers.map(buyer => (\\n      <li>\\n        {buyer.firstName + ' - ' + buyer.lastName}\\n        {buyer.followers.map((follower, index) => (\\n          <>\\n            <li>\\n              {index + '. ' + follower.firstName + ' - ' + follower.lastName}\\n            </li>\\n            <li className=\\\"hidden\\\">{index % 2 == 0 ? 'odd' : 'even'}</li>\\n          </>\\n        ))}\\n      </li>\\n    ))}\\n  </ul>,\\n  document.querySelector('#app')\\n);\\n\"}"],"sourceRoot":""}